{"version":3,"sources":["constants/productConstants.js","constants/cartConstants.js","constants/userConstants.js","constants/orderConstants.js","store.js","reducers/productReducers.js","reducers/cartReducers.js","reducers/userReducers.js","reducers/orderReducers.js","components/searchBox.js","actions/userActions.js","components/Header.js","components/Footer.js","components/Rating.js","components/Product.js","components/Message.js","components/Loader.js","components/Paginate.js","actions/productActions.js","components/ProductCarousel.js","components/Meta.js","screens/HomeScreen.js","screens/ProductScreen.js","actions/cartActions.js","screens/CartScreen.js","components/FormContainer.js","screens/LoginScreen.js","screens/RegisterScreen.js","screens/ProfileScreen.js","actions/orderActions.js","components/CheckoutSteps.js","screens/ShippingScreen.js","screens/PaymentScreen.js","screens/PlaceOrderScreen.js","screens/OrderScreen.js","screens/UserListScreen.js","screens/UserEditScreen.js","screens/ProductListScreen.js","screens/ProductEditScreen.js","screens/OrderListScreen.js","App.js","reportWebVitals.js","index.js"],"names":["PRODUCT_LIST_REQUEST","PRODUCT_LIST_SUCCESS","PRODUCT_LIST_FAIL","PRODUCT_DETAILS_REQUEST","PRODUCT_DETAILS_SUCCESS","PRODUCT_DETAILS_FAIL","PRODUCT_DELETE_REQUEST","PRODUCT_DELETE_SUCCESS","PRODUCT_DELETE_FAIL","PRODUCT_CREATE_REQUEST","PRODUCT_CREATE_SUCCESS","PRODUCT_CREATE_FAIL","PRODUCT_CREATE_RESET","PRODUCT_UPDATE_REQUEST","PRODUCT_UPDATE_SUCCESS","PRODUCT_UPDATE_FAIL","PRODUCT_UPDATE_RESET","PRODUCT_CREATE_REVIEW_REQUEST","PRODUCT_CREATE_REVIEW_SUCCESS","PRODUCT_CREATE_REVIEW_FAIL","PRODUCT_CREATE_REVIEW_RESET","PRODUCT_TOP_REQUEST","PRODUCT_TOP_SUCCESS","PRODUCT_TOP_FAIL","CART_ADD_ITEM","CART_CLEAR_ITEMS","CART_REMOVE_ITEM","CART_SAVE_SHIPPING_ADDRESS","CART_SAVE_PAYMENT_METHOD","USER_LOGIN_REQUEST","USER_LOGIN_SUCCESS","USER_LOGIN_FAIL","USER_LOGOUT","USER_REGISTER_REQUEST","USER_REGISTER_SUCCESS","USER_REGISTER_FAIL","USER_DETAILS_REQUEST","USER_DETAILS_SUCCESS","USER_DETAILS_FAIL","USER_DETAILS_RESET","USER_UPDATE_PROFILE_REQUEST","USER_UPDATE_PROFILE_SUCCESS","USER_UPDATE_PROFILE_FAIL","USER_UPDATE_PROFILE_RESET","USER_LIST_REQUEST","USER_LIST_SUCCESS","USER_LIST_FAIL","USER_LIST_RESET","USER_DELETE_REQUEST","USER_DELETE_SUCCESS","USER_DELETE_FAIL","USER_UPDATE_REQUEST","USER_UPDATE_SUCCESS","USER_UPDATE_FAIL","USER_UPDATE_RESET","ORDER_CREATE_REQUEST","ORDER_CREATE_SUCCESS","ORDER_CREATE_FAIL","ORDER_CREATE_RESET","ORDER_DETAILS_REQUEST","ORDER_DETAILS_SUCCESS","ORDER_DETAILS_FAIL","ORDER_PAY_REQUEST","ORDER_PAY_SUCCESS","ORDER_PAY_FAIL","ORDER_PAY_RESET","ORDER_LIST_MY_REQUEST","ORDER_LIST_MY_SUCCESS","ORDER_LIST_MY_FAIL","ORDER_LIST_MY_RESET","ORDER_LIST_REQUEST","ORDER_LIST_SUCCESS","ORDER_LIST_FAIL","ORDER_DELIVER_REQUEST","ORDER_DELIVER_SUCCESS","ORDER_DELIVER_FAIL","ORDER_DELIVER_RESET","reducer","combineReducers","productList","state","products","action","type","loading","payload","pages","page","error","productDetails","product","reviews","productDelete","success","productCreate","productUpdate","productReviewCreate","productTopRated","cart","cartItems","shippingAddress","item","existItem","find","x","map","filter","paymentMethod","userLogin","userInfo","userRegister","userDetails","user","userUpdateProfile","userList","users","userDelete","userUpdate","orderCreate","order","orderDetails","orderItems","orderPay","orderDeliver","orderListMy","orders","orderList","cartItemsFromStorage","localStorage","getItem","JSON","parse","userInfoFromStorage","initialState","middleware","thunk","store","createStore","composeWithDevTools","applyMiddleware","SearchBox","history","useState","keyword","setKeyword","Form","id","onSubmit","e","preventDefault","form","document","getElementById","trim","push","reset","inline","Control","name","onChange","target","value","placeholder","className","Button","variant","logout","dispatch","removeItem","location","href","getUserDetails","getState","a","config","headers","Authorization","token","axios","get","data","message","response","Header","useDispatch","useSelector","Navbar","bg","expand","collapseOnSelect","Container","to","Brand","Toggle","Collapse","render","Nav","Link","NavDropdown","title","Item","onClick","isAdmin","Footer","Row","Col","Rating","text","color","style","defaultProps","Product","Card","_id","Img","src","image","Body","Title","as","Text","rating","numReviews","price","Message","children","Alert","Loader","Spinner","animation","role","width","height","margin","display","Paginate","Pagination","Array","keys","active","listProducts","pageNumber","listProductDetails","ProductCarousel","useEffect","Carousel","pause","Caption","Image","alt","fluid","Meta","description","keywords","Helmet","content","HomeScreen","match","params","sm","md","lg","xl","ProductScreen","qty","setQty","setRating","comment","setComment","successProductReview","loadingProductReview","errorProductReview","ListGroup","countInStock","disabled","length","review","createdAt","substring","productId","post","console","log","Group","controlId","Label","row","addToCart","setItem","stringify","CartScreen","search","Number","split","removeFromCartHandler","removeFromCart","ms","rounded","reduce","acc","toFixed","FormContainer","xs","LoginScreen","email","setEmail","password","setPassword","redirect","login","RegisterScreen","setName","confirmPassword","setConfirmPassword","setMessage","register","ProfileScreen","loadingOrders","errorOrders","put","updateUserProfile","Table","striped","bordered","hover","responsive","totalPrice","isPaid","paidAt","isDelivered","deliveredAt","CheckoutSteps","step1","step2","step3","step4","ShippingScreen","address","setAddress","city","setCity","postalCode","setPostalCode","country","setCountry","required","PaymentScreen","setPaymentMethod","Check","label","checked","PlaceOrderScreen","addDecimals","num","Math","round","itemsPrice","shippingPrice","taxPrice","index","createOrder","OrderScreen","orderId","sdkReady","setSdkReady","loadingPay","successPay","loadingDeliver","successDeliver","addPayPalScript","clientId","script","createElement","async","onload","body","appendChild","window","paypal","amount","onSuccess","paymentResult","payOrder","deliverOrder","UserListScreen","successDelete","deleteHandler","confirm","delete","deleteUser","UserEditScreen","userId","setIsAdmin","loadingUpdate","errorUpdate","successUpdate","updateUser","ProductListScreen","loadingDelete","errorDelete","loadingCreate","errorCreate","successCreate","createdProduct","deleteProduct","_name","category","brand","ProductEditScreen","setPrice","setImage","setBrand","setCategory","setCountInStock","setDescription","uploading","setUploading","uploadFileHandler","file","files","formData","FormData","append","updateProduct","custom","OrderListScreen","styles","App","path","component","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM"],"mappings":"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","file":"static/js/main.bf0f5625.chunk.js","sourcesContent":["export const PRODUCT_LIST_REQUEST = 'PRODUCT_LIST_REQUEST'\r\nexport const PRODUCT_LIST_SUCCESS = 'PRODUCT_LIST_SUCCESS'\r\nexport const PRODUCT_LIST_FAIL = 'PRODUCT_LIST_FAIL'\r\n\r\nexport const PRODUCT_DETAILS_REQUEST = 'PRODUCT_DETAILS_REQUEST'\r\nexport const PRODUCT_DETAILS_SUCCESS = 'PRODUCT_DETAILS_SUCCESS'\r\nexport const PRODUCT_DETAILS_FAIL = 'PRODUCT_DETAILS_FAIL'\r\n\r\nexport const PRODUCT_DELETE_REQUEST = 'PRODUCT_DELETE_REQUEST'\r\nexport const PRODUCT_DELETE_SUCCESS = 'PRODUCT_DELETE_SUCCESS'\r\nexport const PRODUCT_DELETE_FAIL = 'PRODUCT_DELETE_FAIL'\r\n\r\nexport const PRODUCT_CREATE_REQUEST = 'PRODUCT_CREATE_REQUEST'\r\nexport const PRODUCT_CREATE_SUCCESS = 'PRODUCT_CREATE_SUCCESS'\r\nexport const PRODUCT_CREATE_FAIL = 'PRODUCT_CREATE_FAIL'\r\nexport const PRODUCT_CREATE_RESET = 'PRODUCT_CREATE_RESET'\r\n\r\nexport const PRODUCT_UPDATE_REQUEST = 'PRODUCT_UPDATE_REQUEST'\r\nexport const PRODUCT_UPDATE_SUCCESS = 'PRODUCT_UPDATE_SUCCESS'\r\nexport const PRODUCT_UPDATE_FAIL = 'PRODUCT_UPDATE_FAIL'\r\nexport const PRODUCT_UPDATE_RESET = 'PRODUCT_UPDATE_RESET'\r\n\r\nexport const PRODUCT_CREATE_REVIEW_REQUEST = 'PRODUCT_CREATE_REVIEW_REQUEST'\r\nexport const PRODUCT_CREATE_REVIEW_SUCCESS = 'PRODUCT_CREATE_REVIEW_SUCCESS'\r\nexport const PRODUCT_CREATE_REVIEW_FAIL = 'PRODUCT_CREATE_REVIEW_FAIL'\r\nexport const PRODUCT_CREATE_REVIEW_RESET = 'PRODUCT_CREATE_REVIEW_RESET'\r\n\r\nexport const PRODUCT_TOP_REQUEST = 'PRODUCT_TOP_REQUEST'\r\nexport const PRODUCT_TOP_SUCCESS = 'PRODUCT_TOP_SUCCESS'\r\nexport const PRODUCT_TOP_FAIL = 'PRODUCT_TOP_FAIL'","export const CART_ADD_ITEM = 'CART_ADD_ITEM'\r\nexport const CART_CLEAR_ITEMS = 'CART_RESET'\r\nexport const CART_REMOVE_ITEM = 'CART_REMOVE_ITEM'\r\nexport const CART_SAVE_SHIPPING_ADDRESS = 'CART_SAVE_SHIPPING_ADDRESS'\r\nexport const CART_SAVE_PAYMENT_METHOD = 'CART_SAVE_PAYMENT_METHOD'","export const USER_LOGIN_REQUEST = 'USER_LOGIN_REQUEST'\r\nexport const USER_LOGIN_SUCCESS = 'USER_LOGIN_SUCCESS'\r\nexport const USER_LOGIN_FAIL = 'USER_LOGIN_FAIL'\r\nexport const USER_LOGOUT = 'USER_LOGOUT'\r\n\r\nexport const USER_REGISTER_REQUEST = 'USER_REGISTER_REQUEST'\r\nexport const USER_REGISTER_SUCCESS = 'USER_REGISTER_SUCCESS'\r\nexport const USER_REGISTER_FAIL = 'USER_REGISTER_FAIL'\r\n\r\nexport const USER_DETAILS_REQUEST = 'USER_DETAILS_REQUEST'\r\nexport const USER_DETAILS_SUCCESS = 'USER_DETAILS_SUCCESS'\r\nexport const USER_DETAILS_FAIL = 'USER_DETAILS_FAIL'\r\nexport const USER_DETAILS_RESET = 'USER_DETAILS_RESET'\r\n\r\nexport const USER_UPDATE_PROFILE_REQUEST = 'USER_UPDATE_PROFILE_REQUEST'\r\nexport const USER_UPDATE_PROFILE_SUCCESS = 'USER_UPDATE_PROFILE_SUCCESS'\r\nexport const USER_UPDATE_PROFILE_FAIL = 'USER_UPDATE_PROFILE_FAIL'\r\nexport const USER_UPDATE_PROFILE_RESET = 'USER_UPDATE_PROFILE_RESET'\r\n\r\nexport const USER_LIST_REQUEST = 'USER_LIST_REQUEST'\r\nexport const USER_LIST_SUCCESS = 'USER_LIST_SUCCESS'\r\nexport const USER_LIST_FAIL = 'USER_LIST_FAIL'\r\nexport const USER_LIST_RESET = 'USER_LIST_RESET'\r\n\r\nexport const USER_DELETE_REQUEST = 'USER_DELETE_REQUEST'\r\nexport const USER_DELETE_SUCCESS = 'USER_DELETE_SUCCESS'\r\nexport const USER_DELETE_FAIL = 'USER_DELETE_FAIL'\r\n\r\nexport const USER_UPDATE_REQUEST = 'USER_UPDATE_REQUEST'\r\nexport const USER_UPDATE_SUCCESS = 'USER_UPDATE_SUCCESS'\r\nexport const USER_UPDATE_FAIL = 'USER_UPDATE_FAIL'\r\nexport const USER_UPDATE_RESET = 'USER_UPDATE_RESET'","export const ORDER_CREATE_REQUEST = 'ORDER_CREATE_REQUEST'\r\nexport const ORDER_CREATE_SUCCESS = 'ORDER_CREATE_SUCCESS'\r\nexport const ORDER_CREATE_FAIL = 'ORDER_CREATE_FAIL'\r\nexport const ORDER_CREATE_RESET = 'ORDER_CREATE_RESET'\r\n\r\nexport const ORDER_DETAILS_REQUEST = 'ORDER_DETAILS_REQUEST'\r\nexport const ORDER_DETAILS_SUCCESS = 'ORDER_DETAILS_SUCCESS'\r\nexport const ORDER_DETAILS_FAIL = 'ORDER_DETAILS_FAIL'\r\n\r\nexport const ORDER_PAY_REQUEST = 'ORDER_PAY_REQUEST'\r\nexport const ORDER_PAY_SUCCESS = 'ORDER_PAY_SUCCESS'\r\nexport const ORDER_PAY_FAIL = 'ORDER_PAY_FAIL'\r\nexport const ORDER_PAY_RESET = 'ORDER_PAY_RESET'\r\n\r\nexport const ORDER_LIST_MY_REQUEST = 'ORDER_LIST_MY_REQUEST'\r\nexport const ORDER_LIST_MY_SUCCESS = 'ORDER_LIST_MY_SUCCESS'\r\nexport const ORDER_LIST_MY_FAIL = 'ORDER_LIST_MY_FAIL'\r\nexport const ORDER_LIST_MY_RESET = 'ORDER_LIST_MY_RESET'\r\n\r\nexport const ORDER_LIST_REQUEST = 'ORDER_LIST_REQUEST'\r\nexport const ORDER_LIST_SUCCESS = 'ORDER_LIST_SUCCESS'\r\nexport const ORDER_LIST_FAIL = 'ORDER_LIST_FAIL'\r\n\r\nexport const ORDER_DELIVER_REQUEST = 'ORDER_DELIVER_REQUEST'\r\nexport const ORDER_DELIVER_SUCCESS = 'ORDER_DELIVER_SUCCESS'\r\nexport const ORDER_DELIVER_FAIL = 'ORDER_DELIVER_FAIL'\r\nexport const ORDER_DELIVER_RESET = 'ORDER_DELIVER_RESET'","import { createStore, combineReducers, applyMiddleware } from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport { composeWithDevTools } from 'redux-devtools-extension'\r\nimport {\r\n  productListReducer,\r\n  productDetailsReducer,\r\n  productDeleteReducer,\r\n  productCreateReducer,\r\n  productUpdateReducer,\r\n  productReviewCreateReducer,\r\n  productTopRatedReducer,\r\n} from './reducers/productReducers'\r\nimport { cartReducer } from './reducers/cartReducers'\r\nimport {\r\n  userLoginReducer,\r\n  userRegisterReducer,\r\n  userDetailsReducer,\r\n  userUpdateProfileReducer,\r\n  userListReducer,\r\n  userDeleteReducer,\r\n  userUpdateReducer,\r\n} from './reducers/userReducers'\r\nimport {\r\n  orderCreateReducer,\r\n  orderDetailsReducer,\r\n  orderPayReducer,\r\n  orderDeliverReducer,\r\n  orderListMyReducer,\r\n  orderListReducer,\r\n} from './reducers/orderReducers'\r\n\r\nconst reducer = combineReducers({\r\n  productList: productListReducer,\r\n  productDetails: productDetailsReducer,\r\n  productDelete: productDeleteReducer,\r\n  productCreate: productCreateReducer,\r\n  productUpdate: productUpdateReducer,\r\n  productReviewCreate: productReviewCreateReducer,\r\n  productTopRated: productTopRatedReducer,\r\n  cart: cartReducer,\r\n  userLogin: userLoginReducer,\r\n  userRegister: userRegisterReducer,\r\n  userDetails: userDetailsReducer,\r\n  userUpdateProfile: userUpdateProfileReducer,\r\n  userList: userListReducer,\r\n  userDelete: userDeleteReducer,\r\n  userUpdate: userUpdateReducer,\r\n  orderCreate: orderCreateReducer,\r\n  orderDetails: orderDetailsReducer,\r\n  orderPay: orderPayReducer,\r\n  orderDeliver: orderDeliverReducer,\r\n  orderListMy: orderListMyReducer,\r\n  orderList: orderListReducer,\r\n})\r\n\r\nconst cartItemsFromStorage = localStorage.getItem('cartItems')\r\n                            ? JSON.parse(localStorage.getItem('cartItems'))\r\n                            : []\r\n\r\nconst userInfoFromStorage = localStorage.getItem('userInfo')\r\n                            ? JSON.parse(localStorage.getItem('userInfo'))\r\n                            : null\r\n\r\nconst shippingAddressFromStorage = localStorage.getItem('shippingAddress')\r\n                            ? JSON.parse(localStorage.getItem('shippingAddress'))\r\n                            : {}\r\n\r\nconst initialState = {\r\n    cart: {\r\n        cartItems: cartItemsFromStorage,\r\n        shippingAddress: shippingAddressFromStorage\r\n    },\r\n    userLogin: { userInfo: userInfoFromStorage}\r\n}\r\n\r\nconst middleware = [thunk]\r\n\r\nconst store = createStore(\r\n    reducer,\r\n    initialState,\r\n    composeWithDevTools(applyMiddleware(...middleware))\r\n)\r\n\r\nexport default store","import {\r\n    PRODUCT_LIST_REQUEST,\r\n    PRODUCT_LIST_SUCCESS,\r\n    PRODUCT_LIST_FAIL,\r\n    PRODUCT_DETAILS_REQUEST,\r\n    PRODUCT_DETAILS_SUCCESS,\r\n    PRODUCT_DETAILS_FAIL,\r\n    PRODUCT_DELETE_REQUEST,\r\n    PRODUCT_DELETE_SUCCESS,\r\n    PRODUCT_DELETE_FAIL,\r\n    PRODUCT_CREATE_RESET,\r\n    PRODUCT_CREATE_FAIL,\r\n    PRODUCT_CREATE_SUCCESS,\r\n    PRODUCT_CREATE_REQUEST,\r\n    PRODUCT_UPDATE_REQUEST,\r\n    PRODUCT_UPDATE_SUCCESS,\r\n    PRODUCT_UPDATE_FAIL,\r\n    PRODUCT_UPDATE_RESET,\r\n    PRODUCT_CREATE_REVIEW_REQUEST,\r\n    PRODUCT_CREATE_REVIEW_SUCCESS,\r\n    PRODUCT_CREATE_REVIEW_FAIL,\r\n    PRODUCT_CREATE_REVIEW_RESET,\r\n    PRODUCT_TOP_REQUEST,\r\n    PRODUCT_TOP_SUCCESS,\r\n    PRODUCT_TOP_FAIL,\r\n  } from '../constants/productConstants'\r\n\r\n  export const productListReducer = (state = { products: []}, action) => {\r\n      switch (action.type) {\r\n          case PRODUCT_LIST_REQUEST:\r\n              return { loading: true, products: [] }\r\n          case PRODUCT_LIST_SUCCESS:\r\n              return { loading: false, products: action.payload.products, pages: action.payload.pages, page: action.payload.page }\r\n          case PRODUCT_LIST_FAIL:\r\n              return { loading: false, error: action.payload}\r\n          default:\r\n              return state\r\n      }\r\n  }\r\n\r\n export const productDetailsReducer = ( state = { product: { reviews: []}}, action) => {\r\n     switch(action.type) {\r\n         case PRODUCT_DETAILS_REQUEST:\r\n             return { ...state, loading: true}\r\n         case PRODUCT_DETAILS_SUCCESS:\r\n             return {loading: false, product: action.payload}\r\n         case PRODUCT_DETAILS_FAIL:\r\n             return { loading: false, error: action.payload}\r\n         default: \r\n             return state\r\n     }\r\n }\r\n\r\n export const productDeleteReducer = (state = {}, action) => {\r\n    switch(action.type) {\r\n        case PRODUCT_DELETE_REQUEST:\r\n            return { loading: true}\r\n        case PRODUCT_DELETE_SUCCESS:\r\n            return { loading: false, success: true}\r\n        case PRODUCT_DELETE_FAIL:\r\n            return { loading: false, error: action.payload}\r\n        default:\r\n            return state\r\n    }\r\n }\r\n\r\n export const productCreateReducer = ( state = {}, action) => {\r\n      switch(action.type) {\r\n          case PRODUCT_CREATE_REQUEST: \r\n             return { loading: true}\r\n          case PRODUCT_CREATE_SUCCESS:\r\n              return { loading: false, success: true, product: action.payload}\r\n          case PRODUCT_CREATE_FAIL:\r\n              return { loading: false, error: action.payload}\r\n          case PRODUCT_CREATE_RESET:\r\n              return {}\r\n            default: \r\n               return state\r\n      }\r\n }\r\n\r\n export const productUpdateReducer = (state = { product: {} }, action) => {\r\n     switch(action.type) {\r\n         case PRODUCT_UPDATE_REQUEST:\r\n             return { loading: true}\r\n         case PRODUCT_UPDATE_SUCCESS:\r\n             return { loading: false, success: true, product: action.payload}\r\n         case PRODUCT_UPDATE_FAIL:\r\n             return { loading: false, error: action.payload}\r\n         case PRODUCT_UPDATE_RESET:\r\n             return { product: {} }\r\n         default:\r\n             return state\r\n     }\r\n }\r\n\r\n export const productReviewCreateReducer = (state = {}, action) => {\r\n     switch(action.type) {\r\n         case PRODUCT_CREATE_REVIEW_REQUEST:\r\n             return {loading: true}\r\n         case PRODUCT_CREATE_REVIEW_SUCCESS: \r\n             return {loading: false, success: true}\r\n         case PRODUCT_CREATE_REVIEW_FAIL:\r\n             return { loading: false, error: action.payload}\r\n         case PRODUCT_CREATE_REVIEW_RESET:\r\n             return {}\r\n        default:\r\n             return state\r\n     }\r\n } \r\n\r\n export const productTopRatedReducer = (state = { products: [] }, action) => {\r\n        switch(action.type) {\r\n            case PRODUCT_TOP_REQUEST:\r\n                return { loading: true, products: [] }\r\n            case PRODUCT_TOP_SUCCESS:\r\n                return { loading: false, products: action.payload}\r\n            case PRODUCT_TOP_FAIL:\r\n                return { loading: false, error: action.payload}\r\n            default: \r\n            return state\r\n        }\r\n }","import {\r\n    CART_ADD_ITEM,\r\n    CART_REMOVE_ITEM,\r\n    CART_SAVE_SHIPPING_ADDRESS,\r\n    CART_SAVE_PAYMENT_METHOD,\r\n    CART_CLEAR_ITEMS,\r\n  } from '../constants/cartConstants'\r\n\r\n  export const cartReducer = ( state = { cartItems: [], shippingAddress: {} }, action) => {\r\n      switch (action.type) {\r\n          case CART_ADD_ITEM:\r\n              const item = action.payload\r\n\r\n              const existItem = state.cartItems.find((x) => x.product === item.product)\r\n\r\n              if(existItem) {\r\n                  return {\r\n                      ...state, cartItems: state.cartItems.map((x) => x.product === existItem ? item : x )\r\n                  }\r\n              } else {\r\n                  return {\r\n                      ...state,\r\n                      cartItems: [...state.cartItems, item]\r\n                  }\r\n              }\r\n           case CART_REMOVE_ITEM:\r\n               return { ...state, cartItems: state.cartItems.filter((x) => x.product !== action.payload)}\r\n            case CART_SAVE_SHIPPING_ADDRESS:\r\n                return { ...state, shippingAddress: action.payload}\r\n            case CART_SAVE_PAYMENT_METHOD:\r\n                return { ...state, paymentMethod: action.payload}\r\n            case CART_CLEAR_ITEMS:\r\n                return { ...state, cartItems: [] }\r\n            default:\r\n                return state\r\n      }\r\n  }","import {\r\n    USER_DETAILS_FAIL,\r\n    USER_DETAILS_REQUEST,\r\n    USER_DETAILS_RESET,\r\n    USER_DETAILS_SUCCESS,\r\n    USER_LIST_REQUEST,\r\n    USER_LIST_SUCCESS,\r\n    USER_LIST_FAIL,\r\n    USER_LIST_RESET,\r\n    USER_LOGIN_FAIL,\r\n    USER_LOGIN_REQUEST,\r\n    USER_LOGIN_SUCCESS,\r\n    USER_LOGOUT,\r\n    USER_REGISTER_FAIL,\r\n    USER_REGISTER_REQUEST,\r\n    USER_REGISTER_SUCCESS,\r\n    USER_UPDATE_PROFILE_FAIL,\r\n    USER_UPDATE_PROFILE_REQUEST,\r\n    USER_UPDATE_PROFILE_SUCCESS,\r\n    USER_DELETE_REQUEST,\r\n    USER_DELETE_SUCCESS,\r\n    USER_DELETE_FAIL,\r\n    USER_UPDATE_RESET,\r\n    USER_UPDATE_REQUEST,\r\n    USER_UPDATE_SUCCESS,\r\n    USER_UPDATE_FAIL,\r\n    USER_UPDATE_PROFILE_RESET,\r\n  } from '../constants/userConstants'\r\n\r\n  export const userLoginReducer = (state = {}, action) => {\r\n      switch(action.type) {\r\n          case USER_LOGIN_REQUEST:\r\n              return {loading:true}\r\n          case USER_LOGIN_SUCCESS:\r\n              return {loading: false, userInfo: action.payload}\r\n          case USER_LOGIN_FAIL:\r\n              return {loading: false, error: action.payload}\r\n          case USER_LOGOUT:\r\n              return {}\r\n          default: \r\n          return state\r\n      }\r\n  }\r\n\r\n  export const userRegisterReducer = (state = {}, action) => {\r\n    switch(action.type) {\r\n        case USER_REGISTER_REQUEST:\r\n            return {loading:true}\r\n        case USER_REGISTER_SUCCESS:\r\n            return {loading: false, userInfo: action.payload}\r\n        case USER_REGISTER_FAIL:\r\n            return {loading: false, error: action.payload}\r\n        case USER_LOGOUT:\r\n            return {}\r\n        default: \r\n        return state\r\n    }\r\n}\r\n\r\nexport const userDetailsReducer = (state = {user: {} }, action) => {\r\n    switch (action.type) {\r\n        case USER_DETAILS_REQUEST:\r\n            return { ...state, loading: true}\r\n        case USER_DETAILS_SUCCESS:\r\n            return { loading: false, user: action.payload}\r\n        case USER_DETAILS_FAIL:\r\n            return { loading: false, error: action.payload}\r\n        case USER_DETAILS_RESET:\r\n            return { user: {} }\r\n        default: \r\n        return state\r\n    }\r\n}\r\n\r\nexport const userUpdateProfileReducer = (state = {}, action) => {\r\n    switch(action.type) {\r\n        case USER_UPDATE_PROFILE_REQUEST:\r\n            return { loading: true}\r\n        case USER_UPDATE_PROFILE_SUCCESS:\r\n            return { loading: false, userInfo: action.payload}\r\n        case USER_UPDATE_PROFILE_FAIL: \r\n            return { loading: false, error: action.payload}\r\n        case USER_UPDATE_PROFILE_RESET:\r\n            return {}\r\n        default: \r\n        return state\r\n    }\r\n}\r\n\r\nexport const userListReducer = (state = { users: [] }, action) => {\r\n    switch(action.type) {\r\n         case USER_LIST_REQUEST:\r\n             return { loading: true}\r\n         case USER_LIST_SUCCESS:\r\n             return { loading: false, users: action.payload}\r\n         case USER_LIST_FAIL:\r\n             return { loading: false, error: action.payload}\r\n         case USER_LIST_RESET:\r\n             return { users: [] }\r\n         default: \r\n             return state\r\n    }\r\n}\r\n\r\nexport const userDeleteReducer = ( state = {}, action) => {\r\n    switch(action.type) {\r\n        case USER_DELETE_REQUEST:\r\n            return { loading: true}\r\n        case USER_DELETE_SUCCESS:\r\n            return { loading: false, success: true}\r\n        case USER_DELETE_FAIL:\r\n            return { loading: false, error: action.payload}\r\n        default: \r\n           return state\r\n    }\r\n}\r\n\r\nexport const userUpdateReducer = ( state = { user: {} }, action) => {\r\n      switch (action.type) {\r\n          case USER_UPDATE_REQUEST: \r\n              return { loading: true}\r\n          case USER_UPDATE_SUCCESS:\r\n              return { loading: false, success: true}\r\n          case USER_UPDATE_FAIL:\r\n              return { loading: false, error: action.payload}\r\n          case USER_UPDATE_RESET:\r\n              return { user: {} }\r\n          default: \r\n            return state\r\n      }\r\n}","import {\r\n    ORDER_CREATE_REQUEST,\r\n    ORDER_CREATE_SUCCESS,\r\n    ORDER_CREATE_FAIL,\r\n    ORDER_DETAILS_REQUEST,\r\n    ORDER_DETAILS_SUCCESS,\r\n    ORDER_DETAILS_FAIL,\r\n    ORDER_PAY_REQUEST,\r\n    ORDER_PAY_FAIL,\r\n    ORDER_PAY_SUCCESS,\r\n    ORDER_PAY_RESET,\r\n    ORDER_LIST_MY_REQUEST,\r\n    ORDER_LIST_MY_SUCCESS,\r\n    ORDER_LIST_MY_FAIL,\r\n    ORDER_LIST_MY_RESET,\r\n    ORDER_LIST_FAIL,\r\n    ORDER_LIST_SUCCESS,\r\n    ORDER_LIST_REQUEST,\r\n    ORDER_DELIVER_FAIL,\r\n    ORDER_DELIVER_SUCCESS,\r\n    ORDER_DELIVER_REQUEST,\r\n    ORDER_DELIVER_RESET,\r\n    ORDER_CREATE_RESET,\r\n  } from '../constants/orderConstants'\r\n\r\n  export const orderCreateReducer = (state = {}, action) => {\r\n      switch (action.type) {\r\n          case ORDER_CREATE_REQUEST:\r\n              return { loading: true}\r\n          case ORDER_CREATE_SUCCESS:\r\n              return { loading: false, success:true, order: action.payload}\r\n          case ORDER_CREATE_FAIL:\r\n              return { loading: false, error: action.payload}\r\n          case ORDER_CREATE_RESET:\r\n              return {}\r\n            default: \r\n            return state\r\n      }\r\n  }\r\n\r\n  export const orderDetailsReducer = ( state = { loading: true, orderItems: [], shippingAddress: {} }, action) => {\r\n      switch(action.type) {\r\n          case ORDER_DETAILS_REQUEST: \r\n            return { ...state, loading: true}\r\n          case ORDER_DETAILS_SUCCESS:\r\n            return { loading: false, order: action.payload}\r\n          case ORDER_DETAILS_FAIL:\r\n              return { loading: false, error: action.payload}\r\n          default:\r\n              return state\r\n      }\r\n  }\r\n\r\n  export const orderPayReducer = (state = {}, action) => {\r\n      switch(action.type) {\r\n         case ORDER_PAY_REQUEST:\r\n             return {loading: true}\r\n         case ORDER_PAY_SUCCESS:\r\n             return {loading: false, success: true}\r\n         case ORDER_PAY_FAIL:\r\n             return {loading: false, error: action.payload}\r\n         case ORDER_PAY_RESET:\r\n             return {}\r\n         default:\r\n             return state\r\n      }\r\n    }\r\n\r\n    export const orderDeliverReducer = (state = {}, action) => {\r\n        switch(action.type) {\r\n            case ORDER_DELIVER_REQUEST:\r\n                return { loading:true}\r\n            case ORDER_DELIVER_SUCCESS:\r\n                return { loading: false, success:true}\r\n            case ORDER_DELIVER_FAIL:\r\n                return { loading: false, error: action.payload}\r\n            case ORDER_DELIVER_RESET:\r\n                return {}\r\n            default: \r\n            return state\r\n        }\r\n    }\r\n\r\n    export const orderListMyReducer = ( state = { orders: []}, action) => {\r\n        switch(action.type) {\r\n            case ORDER_LIST_MY_REQUEST:\r\n                return { loading: true}\r\n            case ORDER_LIST_MY_SUCCESS:\r\n                return { loading: false, orders: action.payload}\r\n            case ORDER_LIST_MY_FAIL:\r\n                return { loading: false, error: action.payload}\r\n            case ORDER_LIST_MY_RESET:\r\n                return { orders: [] }\r\n            default:\r\n                return state\r\n        }\r\n    }\r\n\r\n    export const orderListReducer = (state = { orders: []}, action) => {\r\n        switch(action.type) {\r\n            case ORDER_LIST_REQUEST:\r\n                return { loading: true}\r\n            case ORDER_LIST_SUCCESS:\r\n                return { loading: false, orders: action.payload}\r\n            case ORDER_LIST_FAIL:\r\n                return { loading: false, error: action.payload}\r\n            default: \r\n            return state\r\n        }\r\n    }","import React, { useState } from 'react'\r\nimport {Form, Button } from 'react-bootstrap'\r\n\r\nconst SearchBox = ({ history }) => {\r\n    const [keyword, setKeyword] = useState('')\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()  \r\n            const form =  document.getElementById('searchForm')\r\n        if(keyword.trim()){\r\n            history.push(`/search/${keyword}`)\r\n            form.reset()\r\n        } else{\r\n            history.push('/')\r\n            form.reset()\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Form id='searchForm' onSubmit={submitHandler} inline='true'>\r\n          <Form.Control \r\n           id='formInput'\r\n          type='text'\r\n          name='q'\r\n          onChange = {(e) => setKeyword(e.target.value)}\r\n          placeholder='Search Products'\r\n          className='mr-sm-2 ml-sm-5'\r\n          ></Form.Control>\r\n          <Button type='submit' variant='outline-info' className='p-1'> Search </Button>\r\n        </Form>\r\n    )\r\n}\r\n\r\nexport default SearchBox","import axios from 'axios'\r\nimport {\r\n  USER_DETAILS_FAIL,\r\n  USER_DETAILS_REQUEST,\r\n  USER_DETAILS_SUCCESS,\r\n  USER_LOGIN_FAIL,\r\n  USER_LOGIN_REQUEST,\r\n  USER_LOGIN_SUCCESS,\r\n  USER_LOGOUT,\r\n  USER_REGISTER_FAIL,\r\n  USER_REGISTER_REQUEST,\r\n  USER_REGISTER_SUCCESS,\r\n  USER_UPDATE_PROFILE_FAIL,\r\n  USER_UPDATE_PROFILE_REQUEST,\r\n  USER_UPDATE_PROFILE_SUCCESS,\r\n  USER_DETAILS_RESET,\r\n  USER_LIST_FAIL,\r\n  USER_LIST_SUCCESS,\r\n  USER_LIST_REQUEST,\r\n  USER_LIST_RESET,\r\n  USER_DELETE_REQUEST,\r\n  USER_DELETE_SUCCESS,\r\n  USER_DELETE_FAIL,\r\n  USER_UPDATE_FAIL,\r\n  USER_UPDATE_SUCCESS,\r\n  USER_UPDATE_REQUEST,\r\n} from '../constants/userConstants'\r\nimport { ORDER_LIST_MY_RESET } from '../constants/orderConstants'\r\n\r\nexport const login = (email, password) => async (dispatch) => {\r\n    try {\r\n        dispatch({\r\n          type: USER_LOGIN_REQUEST\r\n        })\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.post('/api/users/login', {email, password}, config)\r\n\r\n        dispatch({\r\n            type: USER_LOGIN_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n        localStorage.setItem('userInfo', JSON.stringify(data))\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_LOGIN_FAIL,\r\n            payload: \r\n               error.response && error.response.data.message\r\n               ? error.response.data.message\r\n               : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const logout = () => (dispatch) => {\r\n    localStorage.removeItem('userInfo')\r\n    localStorage.removeItem('cartItems')\r\n    localStorage.removeItem('shippingAddress')\r\n    localStorage.removeItem('paymentMethod')\r\n    dispatch({ type: USER_LOGOUT})\r\n    dispatch({ type: USER_DETAILS_RESET})\r\n    dispatch({ type: ORDER_LIST_MY_RESET})\r\n    dispatch({ type: USER_LIST_RESET})\r\n    document.location.href = '/login'\r\n}\r\n\r\nexport const register = (name, email, password) => async (dispatch) => {\r\n    try {\r\n      dispatch({\r\n          type: USER_REGISTER_REQUEST\r\n      })\r\n\r\n      const config = {\r\n          headers: {\r\n              'Content-Type': 'application/json'\r\n          }\r\n      }\r\n\r\n      const { data } = await axios.post ('/api/users', {name, email, password}, config)\r\n         \r\n        dispatch({\r\n            type: USER_REGISTER_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n        dispatch({\r\n            type: USER_LOGIN_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n        localStorage.setItem('userInfo', JSON.stringify(data))\r\n    } catch(error) {\r\n       dispatch({\r\n           type: USER_REGISTER_FAIL,\r\n           payload: \r\n           error.response && error.response.data.message\r\n           ? error.response.data.message\r\n           : error.message\r\n       })\r\n    }\r\n}\r\n\r\nexport const getUserDetails = (id) => async (dispatch, getState) => {\r\n    try{\r\n        dispatch({\r\n            type: USER_DETAILS_REQUEST\r\n        })\r\n\r\n        const { userLogin: { userInfo } } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.get(`/api/users/${id}`, config)\r\n\r\n        dispatch({\r\n            type: USER_DETAILS_SUCCESS,\r\n            payload: data\r\n        })\r\n    } catch(error) {\r\n        const message = \r\n             error.response && error.response.data.message\r\n             ? error.response.data.message\r\n             : error.message\r\n        if(message === 'Not authorized, token failed') {\r\n            dispatch(logout())\r\n        }\r\n        dispatch({\r\n            type: USER_DETAILS_FAIL,\r\n            payload: message\r\n        })\r\n    }\r\n}\r\n\r\nexport const updateUserProfile = (user) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_UPDATE_PROFILE_REQUEST\r\n        })\r\n\r\n        const { userLogin: {userInfo} } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.put('/api/users/profile', user, config)\r\n\r\n        dispatch({\r\n            type: USER_UPDATE_PROFILE_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n        dispatch({\r\n            type: USER_LOGIN_SUCCESS,\r\n            payload: data\r\n        })\r\n        localStorage.setItem('userInfo', JSON.stringify(data))\r\n    } catch(error) {\r\n          const message = \r\n          error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message\r\n\r\n        if(message === 'Not authorized, token failed') {\r\n            dispatch(logout())\r\n        }\r\n        dispatch({\r\n            type: USER_UPDATE_PROFILE_FAIL,\r\n            payload: message\r\n        })\r\n    }\r\n}\r\n\r\nexport const listUsers = () => async (dispatch, getState) => {\r\n    try {\r\n      dispatch({\r\n          type: USER_LIST_REQUEST\r\n      })\r\n\r\n      const { userLogin: { userInfo} } = getState()\r\n\r\n      const config = {\r\n          headers: {\r\n              Authorization: `Bearer ${userInfo.token}  `\r\n          }\r\n      }\r\n\r\n      const { data } = await axios.get('/api/users', config)\r\n\r\n      dispatch({\r\n          type: USER_LIST_SUCCESS,\r\n          payload: data\r\n      })\r\n    } catch(error) {\r\n          const message = \r\n            error.response && error.response.data.message\r\n            ? error.response.data.message\r\n            : error.message\r\n         if(message === 'Not authorized, token failed') {\r\n             dispatch(logout())\r\n         }\r\n         dispatch({\r\n             type: USER_LIST_FAIL,\r\n             payload: message\r\n         })\r\n    }\r\n}\r\n\r\nexport const deleteUser = (id) => async (dispatch, getState) => {\r\n    try {\r\n       dispatch({\r\n           type: USER_DELETE_REQUEST\r\n       })\r\n\r\n       const { userLogin: {userInfo} } = getState()\r\n\r\n       const config = {\r\n           headers: {\r\n               Authorization: `Bearer ${userInfo.token}`\r\n           }\r\n       }\r\n\r\n       await axios.delete(`/api/users/${id}`, config)\r\n\r\n       dispatch({ type: USER_DELETE_SUCCESS})\r\n    } catch (error) {\r\n       const message = \r\n             error.response && error.response.data.message\r\n             ? error.response.data.message\r\n             : error.message\r\n        if(message === 'Not authorized, token failed') {\r\n            dispatch(logout())\r\n        }\r\n        dispatch({\r\n            type: USER_DELETE_FAIL,\r\n            payload: message\r\n        })\r\n    }\r\n}\r\n\r\nexport const updateUser = (user) => async (dispatch, getState) => {\r\n   try {\r\n       dispatch({\r\n           type: USER_UPDATE_REQUEST\r\n       })\r\n\r\n       const { userLogin: {userInfo} } = getState()\r\n\r\n       const config = {\r\n           headers: {\r\n               'Content-Type': 'application/json',\r\n               Authorization: `Bearer ${userInfo.token}`\r\n           }\r\n       }\r\n\r\n       const { data } = axios.put(`/api/users/${user._id}`, user, config)\r\n\r\n       dispatch({ type: USER_UPDATE_SUCCESS})\r\n\r\n       dispatch({ type: USER_DETAILS_SUCCESS, payload: data})\r\n\r\n       dispatch({ type: USER_DETAILS_RESET})\r\n   } catch(error) {\r\n       const message = \r\n             error.response && error.response.data.message\r\n             ? error.response.data.message\r\n             : error.message\r\n        if(message === 'Not authorized, token failed') {\r\n            dispatch(logout())\r\n        }\r\n        dispatch({\r\n            type: USER_UPDATE_FAIL,\r\n            payload: message\r\n        })\r\n   }\r\n}","import React from \"react\";\r\nimport { Route } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { LinkContainer } from \"react-router-bootstrap\";\r\nimport { Navbar, Nav, Container, NavDropdown } from \"react-bootstrap\";\r\nimport SearchBox from \"./searchBox\";\r\nimport { logout } from \"../actions/userActions\";\r\n\r\nconst Header = () => {\r\n    const dispatch = useDispatch()\r\n\r\n    const userLogin = useSelector((state) => state.userLogin )\r\n    const { userInfo } = userLogin\r\n\r\n    const logoutHandler = () => {\r\n        dispatch(logout())\r\n    }\r\n\r\n    return(\r\n        <header>\r\n            <Navbar id='Navbar' bg='primary' variant='dark' expand='lg' collapseOnSelect>\r\n               <Container>\r\n                   <LinkContainer to='/'>\r\n                       <Navbar.Brand className='nav-brand'>Ecommerce</Navbar.Brand>\r\n                   </LinkContainer>\r\n                   <Navbar.Toggle aria-controls='basic-navbar-nav'/>\r\n                   <Navbar.Collapse id='basic-navbar-nav'>\r\n                       <Route render={ ({history}) => <SearchBox history={history}/>}/>\r\n                       <Nav className='ml-auto'>\r\n                           <LinkContainer to='/cart'>\r\n                               <Nav.Link>\r\n                                   <i className='fas fa-shopping-cart'></i>Cart\r\n                               </Nav.Link>\r\n                           </LinkContainer>\r\n                            { userInfo ? (\r\n                                <NavDropdown title={userInfo.name} id='username'>\r\n                                    <LinkContainer to='/profile'>\r\n                                        <NavDropdown.Item>Profile</NavDropdown.Item>\r\n                                    </LinkContainer>\r\n                                    <NavDropdown.Item onClick={logoutHandler}>\r\n                                        Logout\r\n                                    </NavDropdown.Item>\r\n                                </NavDropdown>\r\n                            ) : (\r\n                                <LinkContainer to='/login'>\r\n                                    <Nav.Link>\r\n                                        <i className='fas fa-user'></i> Sign In\r\n                                    </Nav.Link>\r\n                                </LinkContainer>\r\n                            )}\r\n                            { userInfo && userInfo.isAdmin && (\r\n                                <NavDropdown title='Admin' id='adminmenu'>\r\n                                    <LinkContainer to='/admin/userlist'>\r\n                                       <NavDropdown.Item>Users</NavDropdown.Item>\r\n                                    </LinkContainer>\r\n                                    <LinkContainer to='/admin/productlist'>\r\n                                       <NavDropdown.Item>Products</NavDropdown.Item>\r\n                                    </LinkContainer>\r\n                                    <LinkContainer to='/admin/orderlist'>\r\n                                       <NavDropdown.Item>Orders</NavDropdown.Item>\r\n                                    </LinkContainer>\r\n                                </NavDropdown>\r\n                            )}\r\n                       </Nav>\r\n                   </Navbar.Collapse>\r\n               </Container>\r\n            </Navbar>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header","import React from 'react'\r\nimport { Container, Row, Col } from \"react-bootstrap\";\r\n\r\nconst Footer = () => {\r\n    return (\r\n        <footer>\r\n            <Container>\r\n                <Row>\r\n                    <Col className='text-center py-3'>Copyright &copy; Francis Inegbenose</Col>\r\n                </Row>\r\n            </Container>\r\n        </footer>\r\n    )\r\n}\r\n\r\nexport default Footer","import React from \"react\";\r\n\r\nconst Rating = ({value, text, color}) => {\r\n    return (\r\n        <div className='rating'>\r\n             <span>\r\n                 <i\r\n                 style={{color}}\r\n                 className={\r\n                     value >= 1\r\n                     ? 'fas fa-star'\r\n                     : value >= 0.5 \r\n                     ? 'fas fa-star-half-alt'\r\n                     : 'far fa-star'\r\n                 }\r\n                 ></i>\r\n             </span>\r\n             <span>\r\n                 <i\r\n                 style={{ color }}\r\n                 className={\r\n                     value >= 2\r\n                     ? 'fas fa-star'\r\n                     : value >= 1.5\r\n                     ? 'fas fa-star-half-alt'\r\n                     : 'far fa-star'\r\n                 }\r\n                 ></i>\r\n             </span>\r\n             <span>\r\n                 <i\r\n                 style={{ color }}\r\n                 className={\r\n                     value >= 3\r\n                     ? 'fas fa-star'\r\n                     : value >= 2.5\r\n                     ? 'fas fa-star-half-alt'\r\n                     : 'far fa-star'\r\n                 }\r\n                 ></i>\r\n             </span>\r\n             <span>\r\n                 <i\r\n                 style={{ color }}\r\n                 className={\r\n                     value >= 4\r\n                     ? 'fas fa-star'\r\n                     : value >= 3.5\r\n                     ? 'fas fa-star-half-alt'\r\n                     : 'far fa-star'\r\n                 }\r\n                 ></i>\r\n             </span>\r\n             <span>\r\n                 <i\r\n                 style={{ color }}\r\n                 className={\r\n                     value >= 5\r\n                     ? 'fas fa-star'\r\n                     : value >= 4.5\r\n                     ? 'fas fa-star-half-alt'\r\n                     : 'far fa-star'\r\n                 }\r\n                 ></i>\r\n             </span>\r\n             <span>{text && text}</span>\r\n        </div>\r\n    )\r\n}\r\n\r\nRating.defaultProps = {\r\n    color: '#f8e825'\r\n}\r\n\r\nexport default Rating","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Card } from \"react-bootstrap\";\r\nimport Rating from \"./Rating\";\r\n\r\nconst Product  = ({ product }) => {\r\n    return (\r\n        <Card className='my-3 p-3 rounded'>\r\n            <Link to={`/product/${product._id}`}>\r\n              <Card.Img src={product.image} variant='top'/>\r\n            </Link>\r\n\r\n            <Card.Body className='product-card'>\r\n                 <Link to={`/product/${product._id}`}>\r\n                     <Card.Title as='div'>\r\n                         <strong>{product.name}</strong>\r\n                     </Card.Title>\r\n                </Link>\r\n\r\n                <Card.Text as='div'>\r\n                    <Rating\r\n                    value={product.rating}\r\n                    text={`${product.numReviews} reviews`}\r\n                    />\r\n                </Card.Text>\r\n\r\n                <Card.Text as='h3'>${product.price}</Card.Text>\r\n            </Card.Body>\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport default Product","import React from \"react\";\r\nimport { Alert } from \"react-bootstrap\";\r\n\r\nconst Message = ({ variant, children}) => {\r\n    return <Alert variant={variant}>{children}</Alert>\r\n}\r\n\r\nMessage.defaultProps = {\r\n    variant: 'info'\r\n}\r\n\r\nexport default Message","import React from \"react\";\r\nimport { Spinner } from \"react-bootstrap\";\r\n\r\nconst Loader = () => {\r\n    return (\r\n        <Spinner\r\n        animation='border'\r\n        role='status'\r\n        style={{\r\n            width: '100px',\r\n            height: '100px',\r\n            margin: 'auto',\r\n            display: 'block'\r\n        }}\r\n        >\r\n         <span className='sr-only'>Loading..</span>\r\n        </Spinner>\r\n    )\r\n}\r\n\r\nexport default Loader","import React from \"react\";\r\nimport { Pagination } from \"react-bootstrap\";\r\nimport { LinkContainer } from \"react-router-bootstrap\";\r\n\r\nconst Paginate = ({pages, page, isAdmin = false, keyword = ''}) => {\r\n    return (\r\n        pages > 1 && (\r\n            <Pagination>\r\n                {[...Array(pages).keys()].map((x) => (\r\n                    <LinkContainer\r\n                    key={x+1}\r\n                    to = {\r\n                        !isAdmin\r\n                        ? keyword\r\n                        ? `/search/${keyword}/page/${x + 1}`\r\n                        : `/page/${x + 1}`\r\n                        :`/admin/productlist/${x + 1}`\r\n                    }\r\n                    >\r\n                        <Pagination.Item active={x +1 === page}>{x + 1}</Pagination.Item>\r\n                    </LinkContainer>\r\n                ))}\r\n            </Pagination>\r\n        )\r\n    )\r\n}\r\n\r\nexport default Paginate;","import axios from 'axios'\r\nimport {\r\n  PRODUCT_LIST_REQUEST,\r\n  PRODUCT_LIST_SUCCESS,\r\n  PRODUCT_LIST_FAIL,\r\n  PRODUCT_DETAILS_REQUEST,\r\n  PRODUCT_DETAILS_SUCCESS,\r\n  PRODUCT_DETAILS_FAIL,\r\n  PRODUCT_DELETE_SUCCESS,\r\n  PRODUCT_DELETE_REQUEST,\r\n  PRODUCT_DELETE_FAIL,\r\n  PRODUCT_CREATE_REQUEST,\r\n  PRODUCT_CREATE_SUCCESS,\r\n  PRODUCT_CREATE_FAIL,\r\n  PRODUCT_UPDATE_REQUEST,\r\n  PRODUCT_UPDATE_SUCCESS,\r\n  PRODUCT_UPDATE_FAIL,\r\n  PRODUCT_CREATE_REVIEW_REQUEST,\r\n  PRODUCT_CREATE_REVIEW_SUCCESS,\r\n  PRODUCT_CREATE_REVIEW_FAIL,\r\n  PRODUCT_TOP_REQUEST,\r\n  PRODUCT_TOP_SUCCESS,\r\n  PRODUCT_TOP_FAIL,\r\n} from '../constants/productConstants'\r\nimport { logout } from './userActions'\r\n\r\nexport const listProducts = (keyword = '', pageNumber = '') => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: PRODUCT_LIST_REQUEST})\r\n\r\n        const { data } = await axios.get( `/api/products?keyword=${keyword}&pageNumber=${pageNumber}`)\r\n\r\n        dispatch({\r\n            type: PRODUCT_LIST_SUCCESS,\r\n            payload: data\r\n        })\r\n    } catch(error) {\r\n        dispatch({\r\n            type: PRODUCT_LIST_FAIL,\r\n            payload: \r\n               error.response && error.response.data.message\r\n               ? error.response.data.message\r\n               : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const listProductDetails = (id) => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: PRODUCT_DETAILS_REQUEST})\r\n\r\n        const { data } = await axios.get(`/api/products/${id}`)\r\n\r\n        dispatch({\r\n            type: PRODUCT_DETAILS_SUCCESS,\r\n            payload: data\r\n        })\r\n    } catch (error) {\r\n            dispatch({\r\n                type: PRODUCT_DETAILS_FAIL,\r\n                payload: \r\n                error.response && error.response.data.message\r\n                ? error.response.data.message\r\n                : error.message\r\n            })\r\n    }\r\n}\r\n\r\nexport const deleteProduct = (id) => async (dispatch, getState) => {\r\n    try {\r\n       dispatch({\r\n           type: PRODUCT_DELETE_REQUEST\r\n       })\r\n\r\n       const { userLogin: {userInfo } } = getState()\r\n\r\n       const config = {\r\n           headers: {\r\n               Authorization: `Bearer ${userInfo.token}`\r\n           }\r\n       }\r\n\r\n       await axios.delete(`/api/products/${id}`, config)\r\n\r\n       dispatch({\r\n           type: PRODUCT_DELETE_SUCCESS\r\n       })\r\n    } catch(error) {\r\n            const message = \r\n             error.response && error.response.data.message\r\n             ? error.response.data.message\r\n             : error.message\r\n         if (message === 'Not authorized, token failed') {\r\n             dispatch(logout())\r\n         }\r\n         dispatch({\r\n             type: PRODUCT_DELETE_FAIL,\r\n             payload: message\r\n         })\r\n    }\r\n}\r\n\r\nexport const createProduct = () => async (dispatch, getState) => {\r\n    try {\r\n       dispatch({\r\n           type: PRODUCT_CREATE_REQUEST\r\n       })\r\n\r\n       const { userLogin: {userInfo}} = getState()\r\n\r\n       const config = {\r\n           headers: {\r\n               Authorization: `Bearer ${userInfo.token}`\r\n           }\r\n       }\r\n\r\n       const { data } = await axios.post('/api/products', {}, config)\r\n\r\n       dispatch({\r\n           type: PRODUCT_CREATE_SUCCESS,\r\n           payload: data\r\n       })\r\n    } catch(error) {\r\n         const message = \r\n            error.response && error.response.data.message\r\n            ? error.response.data.message\r\n            : error.message\r\n         if( message === 'Not authorized, token failed') {\r\n             dispatch(logout())\r\n         }\r\n         dispatch({\r\n             type: PRODUCT_CREATE_FAIL,\r\n             payload: message\r\n         })\r\n    }\r\n}\r\n\r\nexport const updateProduct = (product) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: PRODUCT_UPDATE_REQUEST\r\n        })\r\n\r\n        const { userLogin: { userInfo} } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.put( `/api/products/${product._id}`, product, config)\r\n\r\n        dispatch({\r\n            type: PRODUCT_UPDATE_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n        dispatch({\r\n             type: PRODUCT_DETAILS_SUCCESS,\r\n             payload: data\r\n            })\r\n    } catch(error) {\r\n        const message = \r\n        error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message\r\n    if( message === 'Not authorized, token failed') {\r\n        dispatch(logout())\r\n    }\r\n    dispatch({\r\n        type: PRODUCT_UPDATE_FAIL,\r\n        payload: message\r\n    })\r\n    }\r\n}\r\n\r\nexport const createProductReview = (productId, review) => async ( dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: PRODUCT_CREATE_REVIEW_REQUEST\r\n        })\r\n\r\n        const { userLogin: {userInfo} } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        await axios.post(`/api/products/${productId}/reviews`, review, config)\r\n\r\n        dispatch ({\r\n            type: PRODUCT_CREATE_REVIEW_SUCCESS\r\n        })\r\n    } catch(error) {\r\n        console.log(error)\r\n        const message = \r\n         error.response && error.response.data.message\r\n         ? error.response.data.message\r\n         : error.message\r\n        if (message === 'Not authorized, token failed') {\r\n             dispatch(logout())\r\n        }\r\n        dispatch({\r\n            type: PRODUCT_CREATE_REVIEW_FAIL,\r\n            payload: message\r\n        })\r\n    }\r\n}\r\n\r\nexport const listTopProducts = () => async (dispatch) => {\r\n    try {\r\n      dispatch({ type: PRODUCT_TOP_REQUEST})\r\n\r\n      const { data } = await axios.get('/api/products/top')\r\n\r\n      dispatch({\r\n          type: PRODUCT_TOP_SUCCESS,\r\n          payload: data\r\n      })\r\n    } catch(error) {\r\n       dispatch({\r\n           type: PRODUCT_TOP_FAIL,\r\n           payload: \r\n           error.response && error.response.data.message\r\n              ? error.response.data.message\r\n              : error.message\r\n       })\r\n    }\r\n}","import React, {useEffect} from \"react\";\r\nimport {Link  } from \"react-router-dom\";\r\nimport { Carousel, Image } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Loader from './Loader';\r\nimport Message from \"./Message\";\r\nimport { listTopProducts } from \"../actions/productActions\";\r\n\r\nconst ProductCarousel = () => {\r\n    const dispatch = useDispatch()\r\n\r\n    const productTopRated = useSelector((state) => state.productTopRated)\r\n    const {loading, error, products} = productTopRated\r\n\r\n    useEffect(() => {\r\n        dispatch(listTopProducts())\r\n    }, [dispatch])\r\n\r\n    return loading ? (<Loader/>) \r\n                   : error ? (<Message variant='danger'>{error}</Message>)\r\n                   : (\r\n                       <Carousel pause='hover' className='bg-primary carousel'>\r\n                           {products.map((product) => (\r\n                               <Carousel.Item key={product._id} className='carousel-item'>\r\n                                  <Link to={`/product/${product._id}`}>\r\n                                      \r\n                                  <Carousel.Caption className='carousel-caption'>\r\n                                    <h2>\r\n                                        {product.name} (${product.price})\r\n                                    </h2>\r\n                                  </Carousel.Caption>\r\n\r\n                                  <Image className='carouselImage' src={product.image} alt={product.name} fluid/>\r\n                                 \r\n                                  </Link>\r\n                               </Carousel.Item>\r\n                           ))}\r\n                       </Carousel>\r\n                   )\r\n}\r\n\r\nexport default ProductCarousel","import React from \"react\";\r\nimport { Helmet } from \"react-helmet\";\r\n\r\nconst Meta = ({ title, description, keywords }) => {\r\n    return (\r\n        <Helmet>\r\n            <title>{title}</title>\r\n            <meta name='description' content={description}/>\r\n            <meta name='keyword' content={keywords}/>\r\n        </Helmet>\r\n    )\r\n}\r\n\r\nMeta.defaultProps = {\r\n    title: 'Welcome To Ecommerce',\r\n    description: 'We sell the best clothing and accessories',\r\n    keywords: 'Buy clothes, bags, shoes'\r\n}\r\n\r\nexport default Meta","import React, { useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Row, Col } from \"react-bootstrap\";\r\nimport Product from '../components/Product'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport Paginate from '../components/Paginate'\r\nimport ProductCarousel from '../components/ProductCarousel'\r\nimport Meta from '../components/Meta'\r\nimport { listProducts } from \"../actions/productActions\";\r\n\r\nconst HomeScreen = ({ match }) => {\r\n    const keyword = match.params.keyword\r\n\r\n    const pageNumber = match.params.pageNumber || 1\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const productList = useSelector((state) => state.productList)\r\n    const {loading, error, products, page, pages} = productList\r\n\r\n    useEffect(() => {\r\n        dispatch(listProducts(keyword, pageNumber))\r\n    }, [dispatch, keyword, pageNumber])\r\n\r\n    return (\r\n        <>\r\n        <Meta/>\r\n        { !keyword ? (\r\n            <ProductCarousel/>\r\n        ) : (\r\n            <Link to='/' className='btn btn-light'>Go Back</Link>\r\n        )}\r\n        <div className='h1'>\r\n        <h1> Latest Products</h1>\r\n        </div>\r\n        {loading ? (\r\n            <Loader/>\r\n        ): error ? (\r\n            <Message variant='danger'>{error}</Message>\r\n        ) : (\r\n            <>\r\n            <Row>\r\n                {products.map((product) => (\r\n                    <Col key={product._id} sm={12} md={6} lg={4} xl={3}>\r\n                    <Product product={product}/>\r\n                    </Col>\r\n                ))}\r\n            </Row>\r\n            <Paginate\r\n            pages={pages}\r\n            page={page}\r\n            keyword={keyword ? keyword : ''}\r\n            />\r\n            </>\r\n        )}\r\n        </>\r\n    );\r\n}\r\n\r\nexport default HomeScreen","import React, { useState,  useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Row, Col, Image, ListGroup, Card, Button, Form } from 'react-bootstrap'\r\nimport Rating from '../components/Rating'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport Meta from '../components/Meta'\r\nimport { \r\n    listProductDetails,\r\n    createProductReview\r\n } from \"../actions/productActions\";\r\n import { PRODUCT_CREATE_REVIEW_RESET } from \"../constants/productConstants\";\r\n\r\n const ProductScreen = ({ history, match }) => {\r\n     const [qty, setQty] = useState(1)\r\n     const [rating, setRating] = useState(0)\r\n     const [comment, setComment] = useState('')\r\n\r\n     const dispatch = useDispatch()\r\n\r\n     const productDetails = useSelector((state) => state.productDetails)\r\n     const {loading, error, product } = productDetails\r\n\r\n     const userLogin = useSelector((state) => state.userLogin)\r\n     const { userInfo } = userLogin\r\n\r\n     const productReviewCreate = useSelector((state) => state.productReviewCreate)\r\n     const {\r\n        success: successProductReview,\r\n        loading: loadingProductReview,\r\n        error: errorProductReview\r\n     } = productReviewCreate\r\n\r\n     useEffect( () => {\r\n         if(successProductReview) {\r\n             setRating(0)\r\n             setComment('')\r\n         }\r\n         if(!product._id || product._id !== match.params.id) {\r\n             dispatch(listProductDetails(match.params.id))\r\n             dispatch({ type: PRODUCT_CREATE_REVIEW_RESET})\r\n         }\r\n     }, [dispatch, match, product._id, successProductReview])\r\n\r\n     const addToCartHandler = () => {\r\n         history.push(`/cart/${match.params.id}?qty=${qty}`)\r\n     }\r\n\r\n     const submitHandler = (e) => {\r\n         e.preventDefault()\r\n         dispatch(\r\n             createProductReview(match.params.id, {\r\n                 rating,\r\n                 comment\r\n             })\r\n         )\r\n     }\r\n\r\n     return (\r\n         <>\r\n         <Link className='btn btn-light my-3' to='/'>\r\n             Go Back\r\n         </Link>\r\n         {loading ? (\r\n             <Loader/>\r\n         ) : error ? (\r\n            <Message variant='danger'>{error}</Message>\r\n         ) : (\r\n             <>\r\n             <Meta title={product.name}/>\r\n             <Row>\r\n                 <Col md={6}>\r\n                     <Image src={product.image} alt={product.name} fluid/>\r\n                 </Col>\r\n                 <Col md={3}>\r\n                     <ListGroup variant='flush'>\r\n                        <ListGroup.Item>\r\n                            <h3>{product.name}</h3>\r\n                        </ListGroup.Item>\r\n                        <ListGroup.Item>\r\n                            <Rating\r\n                            value={product.rating}\r\n                            text={`${product.numReviews} reviews`}\r\n                            />\r\n                        </ListGroup.Item>\r\n\r\n                        <ListGroup.Item>\r\n                            Price: ${product.price}\r\n                        </ListGroup.Item>\r\n                        <ListGroup.Item>\r\n                           Description: {product.description}\r\n                        </ListGroup.Item>\r\n                     </ListGroup>\r\n                 </Col>\r\n                 <Col md={3}>\r\n                     <Card>\r\n                         <ListGroup variant='fiush'>\r\n                             <ListGroup.Item>\r\n                                 <Row>\r\n                                     <Col>Price:</Col>\r\n                                     <Col>\r\n                                     <strong>${product.price}</strong>\r\n                                     </Col>\r\n                                 </Row>\r\n                             </ListGroup.Item>\r\n\r\n                             <ListGroup.Item>\r\n                                 <Row>\r\n                                     <Col>Status:</Col>\r\n                                     <Col>\r\n                                    ${product.countInStock > 0 ? 'In Stock' : 'Out Of Stock'}\r\n                                     </Col>\r\n                                 </Row>\r\n                             </ListGroup.Item>\r\n\r\n                            {product.countInStock > 0 && (\r\n                                <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Qty</Col>\r\n                                    <Col>\r\n                                    <Form.Control\r\n                                    as='select'\r\n                                    value={qty}\r\n                                    onChange={(e) => setQty(e.target.value)}\r\n                                    >\r\n                                        {[...Array(product.countInStock).keys()].map(\r\n                                            (x) => (\r\n                                                <option key={x + 1} value={x + 1}> \r\n                                                    {x + 1}\r\n                                                </option>\r\n                                            )\r\n                                        )}\r\n                                    </Form.Control>\r\n                                    </Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n\r\n                            )}\r\n\r\n                            <ListGroup.Item>\r\n                                <Button\r\n                                onClick={addToCartHandler}\r\n                                className='btn-block'\r\n                                type='button'\r\n                                disabled={product.countInStock === 0}\r\n                                >\r\n                                    Add To Cart\r\n                                </Button>\r\n                            </ListGroup.Item>\r\n                         </ListGroup>\r\n                     </Card>\r\n                 </Col>\r\n             </Row>\r\n             <Row>\r\n                 <Col md={6}>\r\n                     <h2>Reviews</h2>\r\n                     {product.reviews.length === 0  && <Message>No Reviews</Message>}\r\n                     <ListGroup variant='flush'>\r\n                         {product.reviews.map((review) => (\r\n                             <ListGroup.Item key={review._id}>\r\n                                 <strong>{review.name}</strong>\r\n                                 <Rating value={review.rating}/>\r\n                                 <p>{review.createdAt.substring(0, 10)}</p>\r\n                                 <p>{review.comment}</p>\r\n                             </ListGroup.Item>\r\n                         ))}\r\n                         <ListGroup.Item>\r\n                             <h2>Write a Customer Review</h2>\r\n                             {successProductReview && (\r\n                                 <Message variant='success'>\r\n                                     Review submitted successfully\r\n                                 </Message>\r\n                             )}\r\n                             {loadingProductReview && <Loader/>}\r\n                             {errorProductReview && (\r\n                                 <Message variant='danger'>{errorProductReview}</Message>\r\n                             )}\r\n                             {userInfo ? (\r\n                                 <Form onSubmit={submitHandler}>\r\n                                     <Form.Group controlId='rating'>\r\n                                         <Form.Label>Rating</Form.Label>\r\n                                         <Form.Control\r\n                                         as='select'\r\n                                         value={rating}\r\n                                         onChange={(e) => setRating(e.target.value)}\r\n                                         >\r\n                                             <option value=''>Select...</option>\r\n                                             <option value='1'>1 - Poor</option>\r\n                                             <option value='2'>2 - Fair</option>\r\n                                             <option value='3'>3 - Good</option>\r\n                                             <option value='4'>4 - Very Good</option>\r\n                                             <option value='5'>5 - Excellent</option>\r\n                                         </Form.Control>\r\n                                     </Form.Group>\r\n                                     <Form.Group controlId='comment'>\r\n                                         <Form.Label>comment</Form.Label>\r\n                                         <Form.Control\r\n                                         as='textarea'\r\n                                         row='3'\r\n                                         value={comment}\r\n                                         onChange={(e) => setComment(e.target.value)}\r\n                                         ></Form.Control>\r\n                                     </Form.Group>\r\n                                     <Button\r\n                                     disabled={loadingProductReview}\r\n                                     type='submit'\r\n                                     variant='primary'\r\n                                     >Submit</Button>\r\n                                 </Form>\r\n                             ) : (\r\n                                 <Message>\r\n                                     Please <Link to='/login'>sign in</Link> to write a review{' '}\r\n                                 </Message>\r\n                             )}\r\n                         </ListGroup.Item>\r\n                     </ListGroup>\r\n                 </Col>\r\n             </Row>\r\n             </>\r\n         )\r\n         }\r\n         </>\r\n     )\r\n     }\r\n\r\n     export default ProductScreen","import axios from 'axios'\r\nimport {\r\n  CART_ADD_ITEM,\r\n  CART_REMOVE_ITEM,\r\n  CART_SAVE_SHIPPING_ADDRESS,\r\n  CART_SAVE_PAYMENT_METHOD,\r\n} from '../constants/cartConstants'\r\n\r\nexport const addToCart = (id, qty) => async (dispatch, getState) => {\r\n    const { data } = await axios.get(`/api/products/${id}`)\r\n\r\n    dispatch({\r\n        type: CART_ADD_ITEM,\r\n        payload: {\r\n            product: data._id,\r\n            name: data.name,\r\n            image: data.image,\r\n            price: data.price,\r\n            countInStock: data.countInStock,\r\n            qty\r\n        }\r\n    })\r\n\r\n    localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems))\r\n}\r\n\r\nexport const removeFromCart = (id) => (dispatch, getState) => {\r\n    dispatch({\r\n        type: CART_REMOVE_ITEM,\r\n        payload: id\r\n    })\r\n\r\n    localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems))\r\n\r\n}\r\n\r\nexport const saveShippingAddress = (data) => (dispatch) => {\r\n    dispatch({\r\n        type: CART_SAVE_SHIPPING_ADDRESS,\r\n        payload: data\r\n    })\r\n\r\n    localStorage.setItem('shippingAddress', JSON.stringify(data))\r\n}\r\n\r\nexport const savePaymentMethod = (data) => (dispatch) => {\r\n    dispatch({\r\n        type: CART_SAVE_PAYMENT_METHOD,\r\n        payload: data\r\n    })\r\n\r\n    localStorage.setItem('paymentMethod', JSON.stringify(data))\r\n}","import React,  { useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Row, Col, ListGroup, Image, Form, Button, Card } from \"react-bootstrap\";\r\nimport Message from \"../components/Message\";\r\nimport { addToCart, removeFromCart } from \"../actions/cartActions\";\r\n\r\nconst CartScreen = ({match, location, history }) => {\r\n    const productId = match.params.id \r\n\r\n    const qty = location.search ? Number(location.search.split('=')[1]) : 1\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const cart = useSelector((state) => state.cart)\r\n    const { cartItems } = cart\r\n\r\n    useEffect(() => {\r\n        if(productId) {\r\n            dispatch(addToCart(productId, qty))\r\n        }\r\n    }, [dispatch, productId, qty])\r\n\r\n    const removeFromCartHandler = (id) => {\r\n        dispatch(removeFromCart(id))\r\n    }\r\n\r\n    const checkoutHandler = () => {\r\n        history.push('/login?redirect=shipping')\r\n    }\r\n\r\n    return (\r\n        <Row>\r\n            <Col md={8}>\r\n              <h1>Shopping Cart</h1>\r\n              {cartItems.length === 0 ? (\r\n                  <Message>\r\n                      Your cart is empty <Link to='/'>Go Back</Link>\r\n                  </Message>\r\n              ) : (\r\n                  <ListGroup variant='flush'>\r\n                      {cartItems.map((item) => (\r\n                          <ListGroup.Item key={item.product}>\r\n                              <Row>\r\n                                  <Col ms={2}>\r\n                                  <Image src={item.image} alt={item.name} fluid rounded/>\r\n                                  </Col>\r\n                                  <Col md={3}>\r\n                                  <Link to={`/product/${item.product}`}>{item.name}</Link>\r\n                                  </Col>\r\n                                  <Col md={2}>${item.price}</Col>\r\n                                  <Col md={2}>\r\n                                  <Form.Control\r\n                                  as='select'\r\n                                  value={item.qty}\r\n                                  onChange={(e) => dispatch(addToCart(item.product, Number(e.target.value)))}\r\n                                  >\r\n                                      {[...Array(item.countInStock).keys()].map((x) => (\r\n                                          <option key={x + 1} value={x + 1}>\r\n                                              {x + 1}\r\n                                          </option>\r\n                                      ))}\r\n\r\n                                  </Form.Control>\r\n                                  </Col>\r\n                                  <Col md={2}>\r\n                                  <Button\r\n                                  type='button'\r\n                                  variant='light'\r\n                                  onClick={() => removeFromCartHandler(item.product)}\r\n                                  >\r\n                                      <i className='fas fa-trash'></i>\r\n                                  </Button>\r\n                                  </Col>\r\n                              </Row>\r\n                          </ListGroup.Item>\r\n                      ))}\r\n                  </ListGroup>\r\n              )}\r\n            </Col>\r\n            <Col md={4}>\r\n            <Card>\r\n                <ListGroup variant='flush'>\r\n                    <ListGroup.Item>\r\n                        <h2>\r\n                            Subtotal ({cartItems.reduce((acc, item) => acc + item.qty, 0)})\r\n                            items\r\n                        </h2>\r\n                        $\r\n                        {cartItems\r\n                            .reduce((acc, item) => acc + item.qty * item.price, 0)\r\n                            .toFixed(2)\r\n                        }\r\n                    </ListGroup.Item>\r\n                    <ListGroup.Item>\r\n                        <Button\r\n                        type='button'\r\n                        className='btn-block'\r\n                        disabled={cartItems.length === 0}\r\n                        onClick={checkoutHandler}\r\n                        >Proceed To Checkout</Button>\r\n                    </ListGroup.Item>\r\n                </ListGroup>\r\n            </Card>\r\n            </Col>\r\n        </Row>\r\n    )\r\n\r\n}\r\n\r\nexport default CartScreen","import React from \"react\";\r\nimport { Container, Row, Col } from \"react-bootstrap\";\r\n\r\nconst FormContainer = ({ children }) => {\r\n    return (\r\n        <Container>\r\n            <Row className='justify-content-md-center'>\r\n              <Col xs={12} md={6}>\r\n                {children}\r\n              </Col>\r\n            </Row>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default FormContainer","import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Form, Button, Row, Col } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Message from '../components/Message';\r\nimport Loader from '../components/Loader';\r\nimport FormContainer from '../components/FormContainer';\r\nimport { login } from \"../actions/userActions\";\r\n\r\nconst LoginScreen = ({ location, history }) => {\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const userLogin = useSelector((state) => state.userLogin)\r\n    const {loading, error, userInfo } = userLogin\r\n\r\n    const redirect = location.search ? location.search.split('=')[1] : '/'\r\n\r\n    useEffect(() => {\r\n        if(userInfo) {\r\n            history.push(redirect)\r\n        }\r\n    }, [history, userInfo, redirect])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(login(email, password))\r\n    }\r\n\r\n\r\n    return (\r\n        <FormContainer>\r\n            <h1> Sign In</h1>\r\n            {error && <Message variant='danger'>{error}</Message>}\r\n            {loading && <Loader/>}\r\n            <Form onSubmit={submitHandler}>\r\n                <Form.Group controlId='email'>\r\n                    <Form.Label>Email Address</Form.Label>\r\n                    <Form.Control\r\n                    type='email'\r\n                    placeholder='Enter email'\r\n                    value={email}\r\n                    onChange={(e) => setEmail(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='password'>\r\n                    <Form.Label>Password</Form.Label>\r\n                    <Form.Control\r\n                    type='password'\r\n                    placeholder='Enter password'\r\n                    value={password}\r\n                    onChange={(e) => setPassword(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Button type='submit' variant='primary'>\r\n                    Sign In\r\n                </Button>\r\n\r\n            </Form>\r\n\r\n            <Row className='py-3'>\r\n                <Col>\r\n                New Customer ? {' '}\r\n                <Link to={redirect ? `/register?redirect=${redirect}` : '/register'}>\r\n                Register\r\n                </Link>\r\n                </Col>\r\n\r\n            </Row>\r\n        </FormContainer>\r\n    )\r\n}\r\n\r\nexport default LoginScreen","import React, { useState, useEffect } from \"react\";\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button, Row, Col } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport FormContainer from '../components/FormContainer'\r\nimport { register } from '../actions/userActions'\r\n\r\nconst RegisterScreen = ({ location, history}) => {\r\n    const [name, setName] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [confirmPassword, setConfirmPassword] = useState('')\r\n    const [message, setMessage] = useState(null)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const userRegister = useSelector( (state) => state.userRegister )\r\n    const { loading, error, userInfo} = userRegister\r\n\r\n    const redirect = location.search ? location.search.split('=')[1]: '/'\r\n\r\n    useEffect(() => {\r\n        if (userInfo) {\r\n            history.push(redirect)\r\n        }\r\n    }, [history, userInfo, redirect])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        if(password !== confirmPassword){\r\n            setMessage('Passwords do not match')\r\n        } else {\r\n            dispatch(register(name, email, password))\r\n        }\r\n    }\r\n\r\n    return (\r\n        <FormContainer>\r\n            <h1>Sign Up</h1>\r\n            {message && <Message variant='danger'>{message}</Message>}\r\n            {error && <Message variant='danger'>{error}</Message>}\r\n            {loading && <Loader/>}\r\n            <Form onSubmit={submitHandler}>\r\n\r\n                <Form.Group controlId='name'>\r\n                    <Form.Label>Name</Form.Label>\r\n                    <Form.Control\r\n                    type='name'\r\n                    placeholder='Enter name'\r\n                    value={name}\r\n                    onChange={(e) => setName(e.target.value)}\r\n                    ></Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='email'>\r\n                    <Form.Label>Email Address</Form.Label>\r\n                    <Form.Control\r\n                    type='email'\r\n                    placeholder='Enter email'\r\n                    value={email}\r\n                    onChange={(e) => setEmail(e.target.value)}\r\n                    ></Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='password'>\r\n                    <Form.Label>Password</Form.Label>\r\n                    <Form.Control\r\n                    type='password'\r\n                    placeholder='Enter password'\r\n                    value={password}\r\n                    onChange={(e) => setPassword(e.target.value)}\r\n                    ></Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='confirmPassword'>\r\n                    <Form.Label>Confirm Password</Form.Label>\r\n                    <Form.Control\r\n                    type='password'\r\n                    placeholder='Control Password'\r\n                    value={confirmPassword}\r\n                    onChange={(e) => setConfirmPassword(e.target.value)}\r\n                    ></Form.Control>\r\n                </Form.Group>\r\n\r\n                <Button type='submit' variant='primary'>\r\n                    Register\r\n                </Button>\r\n\r\n            </Form>\r\n\r\n            <Row className='py-3'>\r\n        <Col>\r\n          Have an Account?{' '}\r\n          <Link to={redirect ? `/login?redirect=${redirect}` : '/login'}>\r\n            Login\r\n          </Link>\r\n        </Col>\r\n      </Row>\r\n        </FormContainer>\r\n    )\r\n\r\n}\r\n\r\nexport default RegisterScreen","import React, { useState, useEffect } from \"react\";\r\nimport { Table, Form, Button, Row, Col } from \"react-bootstrap\";\r\nimport { LinkContainer } from \"react-router-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Message from \"../components/Message\";\r\nimport Loader from \"../components/Loader\";\r\nimport { getUserDetails, updateUserProfile } from \"../actions/userActions\";\r\nimport { listMyOrders } from \"../actions/orderActions\";\r\nimport { USER_UPDATE_PROFILE_RESET } from \"../constants/userConstants\";\r\n\r\nconst ProfileScreen = ({ location, history}) => {\r\n    const [name, setName ] = useState('')\r\n    const [email, setEmail ] = useState('')\r\n    const [password, setPassword ] = useState('')\r\n    const [confirmPassword, setConfirmPassword] = useState('')\r\n    const [message, setMessage ] = useState(null)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const userDetails = useSelector((state) => state.userDetails)\r\n    const { loading, error, user } = userDetails\r\n\r\n    const userLogin = useSelector((state) => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    const userUpdateProfile = useSelector((state) => state.userUpdateProfile)\r\n    const { success } = userUpdateProfile\r\n\r\n    const orderListMy = useSelector((state) => state.orderListMy)\r\n    const { loading: loadingOrders, error: errorOrders, orders } = orderListMy\r\n\r\n    useEffect(() => {\r\n        if(!userInfo) {\r\n            history.push('/login')\r\n        } else {\r\n            if (!user || !user.name || success) {\r\n                dispatch({ type: USER_UPDATE_PROFILE_RESET})\r\n                dispatch(getUserDetails('profile'))\r\n                dispatch(listMyOrders())\r\n            } else {\r\n                setName(user.name)\r\n                setEmail(user.email)\r\n            }\r\n        }\r\n    }, [dispatch, history, userInfo, user, success])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        if(password !== confirmPassword) {\r\n            setMessage('Passwords do not match')\r\n        } else {\r\n            dispatch(updateUserProfile({ id: user._id, name, email, password}))\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Row>\r\n            <Col md={3}>\r\n            <h2> User Profile</h2>\r\n            {message && <Message variant='danger'>{message}</Message>}\r\n            {}\r\n            {success && <Message variant='success'>Profile Updated</Message>}\r\n            {loading ? (<Loader />) : error ? ( <Message variant='danger'>{error}</Message>) : (\r\n                <Form onSubmit={submitHandler}>\r\n                    <Form.Group controlId='name'>\r\n                        <Form.Label>Name</Form.Label>\r\n                        <Form.Control\r\n                        type='name'\r\n                        placeholder='Enter name'\r\n                        value={name}\r\n                        onChange={(e) => setName(e.target.value)}\r\n                        ></Form.Control>\r\n                    </Form.Group>\r\n                    \r\n                    <Form.Group controlId='email'>\r\n                        <Form.Label>Email Address</Form.Label>\r\n                        <Form.Control\r\n                        type='email'\r\n                        placeholder='Enter email'\r\n                        value={email}\r\n                        onChange={(e) => setEmail(e.target.value)}\r\n                        ></Form.Control>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId='password'>\r\n                        <Form.Label>Password</Form.Label>\r\n                        <Form.Control\r\n                        type='password'\r\n                        placeholder='Enter password'\r\n                        value={password}\r\n                        onChange={(e) => setPassword(e.target.value)}\r\n                        ></Form.Control>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId='confirmPassword'>\r\n                        <Form.Label> Confirm Password</Form.Label>\r\n                        <Form.Control\r\n                        type='password'\r\n                        placeholder='Confirm password'\r\n                        value={confirmPassword}\r\n                        onChange={(e) => setConfirmPassword(e.target.value)}\r\n                        ></Form.Control>\r\n                    </Form.Group>\r\n\r\n                    <Button type='submit' variant='primary'>\r\n                        Update\r\n                    </Button>\r\n                </Form>\r\n            )}\r\n            </Col>\r\n            <Col md={9}>\r\n            <h2>My Orders</h2>\r\n            {loadingOrders ? (\r\n                <Loader />\r\n            ): errorOrders ? (\r\n                <Message variant='danger'>{errorOrders}</Message>\r\n            ) : (\r\n                <Table striped bordered hover responsive className='table-sm'>\r\n                    <thead>\r\n                        <tr>\r\n                            <th>ID</th>\r\n                            <th>DATE</th>\r\n                            <th>TOTAL</th>\r\n                            <th>PAID</th>\r\n                            <th>DELIVERED</th>\r\n                            <th></th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {orders.map((order) => (\r\n                            <tr key={order._id}>\r\n                            <td>{order._id}</td>\r\n                            <td>{order.createdAt.substring(0, 10)}</td>\r\n                            <th>{order.totalPrice}</th>\r\n                            <td>\r\n                                {order.isPaid ? (\r\n                                    order.paidAt.substring(0, 10)\r\n                                ) : (\r\n                                    <i className='fas fa-times' style={{ color: 'red'}}></i>\r\n                                )}\r\n                            </td>\r\n                            <td>\r\n                                {order.isDelivered ? (\r\n                                    order.deliveredAt.substring(0, 10)\r\n                                ) : (\r\n                                    <i className='fas fa-times' style={{ color: 'red'}}></i>\r\n                                )}\r\n                            </td>\r\n                            <td>\r\n                                <LinkContainer to={`/order/${order._id}`}>\r\n                                <Button className='btn-sm' variant='light'>\r\n                                    Details\r\n                                </Button>\r\n                                </LinkContainer>\r\n                            </td>\r\n                            </tr>\r\n                        ))}\r\n                    </tbody>\r\n                </Table>\r\n            )}\r\n            </Col>\r\n        </Row>\r\n    )\r\n}\r\n\r\nexport default ProfileScreen","import axios from 'axios'\r\nimport { CART_CLEAR_ITEMS } from '../constants/cartConstants'\r\nimport {\r\n  ORDER_CREATE_REQUEST,\r\n  ORDER_CREATE_SUCCESS,\r\n  ORDER_CREATE_FAIL,\r\n  ORDER_DETAILS_FAIL,\r\n  ORDER_DETAILS_SUCCESS,\r\n  ORDER_DETAILS_REQUEST,\r\n  ORDER_PAY_FAIL,\r\n  ORDER_PAY_SUCCESS,\r\n  ORDER_PAY_REQUEST,\r\n  ORDER_LIST_MY_REQUEST,\r\n  ORDER_LIST_MY_SUCCESS,\r\n  ORDER_LIST_MY_FAIL,\r\n  ORDER_LIST_FAIL,\r\n  ORDER_LIST_SUCCESS,\r\n  ORDER_LIST_REQUEST,\r\n  ORDER_DELIVER_FAIL,\r\n  ORDER_DELIVER_SUCCESS,\r\n  ORDER_DELIVER_REQUEST,\r\n} from '../constants/orderConstants'\r\nimport { logout } from './userActions'\r\n\r\nexport const createOrder = (order) => async (dispatch, getState) => {\r\n    try {\r\n       dispatch({\r\n           type: ORDER_CREATE_REQUEST\r\n       })\r\n\r\n       const { userLogin: {userInfo}, } = getState()\r\n\r\n       const config = {\r\n           headers: {\r\n               'Content-Type': 'application/json',\r\n               Authorization: `Bearer ${userInfo.token}`\r\n           }\r\n       }\r\n\r\n     const { data } = await axios.post('/api/orders', order, config)\r\n\r\n     dispatch({\r\n         type: ORDER_CREATE_SUCCESS,\r\n         payload: data\r\n     })\r\n     dispatch({\r\n         type: CART_CLEAR_ITEMS,\r\n         payload: data\r\n     })\r\n\r\n     localStorage.removeItem('cartItems')\r\n    } catch (error) {\r\n        const message = \r\n         error.response && error.response.data.message\r\n         ? error.response.data.message\r\n         : error.message\r\n        if( message === 'Not authorized, token failed') {\r\n            dispatch(logout())\r\n        }\r\n        console.log(message)\r\n\r\n        dispatch({\r\n            type: ORDER_CREATE_FAIL,\r\n            payload: message\r\n        })\r\n        }\r\n        \r\n}\r\n\r\nexport const getOrderDetails = (id) => async (dispatch, getState) => {\r\n    try {\r\n\r\n        dispatch({\r\n            type: ORDER_DETAILS_REQUEST\r\n        })\r\n\r\n        const { userLogin: {userInfo}} = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.get(`/api/orders/${id}`, config)\r\n\r\n        dispatch({\r\n            type: ORDER_DETAILS_SUCCESS,\r\n            payload: data\r\n        })\r\n    }catch (error) {\r\n        const message = \r\n              error.response && error.response.data.message\r\n               ? error.response.data.message\r\n               : error.message\r\n            if( message === 'Not authorized, token failed') {\r\n                dispatch(logout())\r\n            }\r\n            dispatch({\r\n                type: ORDER_DETAILS_FAIL,\r\n                payload: message\r\n            })\r\n    }\r\n}\r\n\r\nexport const payOrder = (orderId, paymentResult) => async (dispatch, getState) => {\r\n    try {\r\n       dispatch({\r\n           type: ORDER_PAY_REQUEST\r\n       }) \r\n       const { userLogin: {userInfo}} = getState()\r\n\r\n       const config = {\r\n           headers: {\r\n               'Content-Type': 'application/json',\r\n               Authorization: `Bearer ${userInfo.token}`\r\n           }\r\n       }\r\n\r\n       const {data} = await axios.put( `/api/orders/${orderId}/pay`, paymentResult, config)\r\n\r\n       dispatch({\r\n           type: ORDER_PAY_SUCCESS,\r\n           payload: data\r\n       })\r\n    } catch(error) {\r\n        const message = \r\n               error.response && error.response.data.message\r\n               ? error.response.data.message\r\n               : error.message\r\n               console.log(error)\r\n        if(message === 'Not authorized, token failed') {\r\n            dispatch(logout())\r\n        }\r\n        dispatch({\r\n            type: ORDER_PAY_FAIL,\r\n            payload: message\r\n        })\r\n    }\r\n}\r\n\r\nexport const deliverOrder = (order) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_DELIVER_REQUEST\r\n        })\r\n\r\n        const { userLogin: {userInfo}} = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.put(`/api/orders/${order._id}/deliver`, {}, config)\r\n\r\n        dispatch({\r\n            type: ORDER_DELIVER_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    } catch(error) {\r\n       const message = \r\n             error.response && error.response.data.message\r\n             ? error.response.data.message\r\n             : error.message\r\n          if (message === 'Not authorized, token failed'){\r\n              dispatch(logout())\r\n          }\r\n          dispatch({\r\n              type: ORDER_DELIVER_FAIL,\r\n              payload: message\r\n          })\r\n    }\r\n}\r\n\r\nexport const listMyOrders = () => async (dispatch, getState) => {\r\n    try{\r\n        dispatch({\r\n            type: ORDER_LIST_MY_REQUEST\r\n        })\r\n\r\n        const { userLogin: { userInfo }} = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.get('/api/orders/myorders', config)\r\n\r\n        dispatch({\r\n            type: ORDER_LIST_MY_SUCCESS,\r\n            payload: data\r\n        })\r\n    } catch(error){\r\n        const message = \r\n          error.response && error.response.data.message\r\n           ? error.response.data.message\r\n           :error.message\r\n        if(message === 'Not authorized, token failed'){\r\n            dispatch(logout())\r\n        }\r\n        dispatch({\r\n            type: ORDER_LIST_MY_FAIL,\r\n            payload: message\r\n        })\r\n\r\n    }\r\n}\r\n\r\nexport const listOrders = () => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_LIST_REQUEST\r\n        })\r\n\r\n        const { userLogin: {userInfo} } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.get('/api/orders', config)\r\n\r\n        dispatch({\r\n            type: ORDER_LIST_SUCCESS,\r\n            payload: data\r\n        })\r\n    }catch(error) {\r\n        const message = \r\n             error.response && error.response.data.message\r\n             ? error.response.data.message\r\n             : error.message\r\n        if(message === 'Not authorized, token failed'){\r\n            dispatch(logout())\r\n        }\r\n        dispatch({\r\n            type: ORDER_LIST_FAIL,\r\n            payload: message\r\n        })\r\n\r\n    }\r\n}","import React from 'react'\r\nimport { Nav } from \"react-bootstrap\";\r\nimport { LinkContainer } from \"react-router-bootstrap\";\r\n\r\nconst CheckoutSteps = ({ step1, step2, step3, step4}) => {\r\n    return (\r\n        <Nav className='justify-content-center mb-4'>\r\n          <Nav.Item>\r\n              { step1 ? (\r\n                  <LinkContainer to='/login'>\r\n                      <Nav.Link>Sign In</Nav.Link>\r\n                  </LinkContainer>\r\n              ) : (\r\n                  <Nav.Link disabled>Sign In</Nav.Link>\r\n              ) }\r\n          </Nav.Item>\r\n          \r\n          <Nav.Item>\r\n              { step2 ? (\r\n                  <LinkContainer to='/shipping'>\r\n                      <Nav.Link>Shipping</Nav.Link>\r\n                  </LinkContainer>\r\n              ) : (\r\n                  <Nav.Link disabled>Shipping</Nav.Link>\r\n              ) }\r\n          </Nav.Item>\r\n\r\n          <Nav.Item>\r\n              { step3 ? (\r\n                  <LinkContainer to='/payment'>\r\n                      <Nav.Link>Payment</Nav.Link>\r\n                  </LinkContainer>\r\n              ) : (\r\n                  <Nav.Link disabled>Payment</Nav.Link>\r\n              ) }\r\n          </Nav.Item>\r\n\r\n          <Nav.Item>\r\n              { step4 ? (\r\n                  <LinkContainer to='/placeorder'>\r\n                      <Nav.Link>Place Order</Nav.Link>\r\n                  </LinkContainer>\r\n              ) : (\r\n                  <Nav.Link disabled>Place Order</Nav.Link>\r\n              ) }\r\n          </Nav.Item>\r\n\r\n\r\n        </Nav>\r\n    )\r\n}\r\n\r\nexport default CheckoutSteps","import React, { useState } from 'react'\r\nimport { Form, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport FormContainer from '../components/FormContainer'\r\nimport CheckoutSteps from '../components/CheckoutSteps'\r\nimport { saveShippingAddress } from '../actions/cartActions'\r\n\r\nconst ShippingScreen = ({ history }) => {\r\n    const cart = useSelector((state) => state.cart)\r\n    const { shippingAddress } = cart\r\n\r\n    const [address, setAddress] = useState(shippingAddress.address)\r\n    const [city, setCity] = useState(shippingAddress.city)\r\n    const [postalCode, setPostalCode] = useState(shippingAddress.postalCode)\r\n    const [country, setCountry] = useState(shippingAddress.country)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(saveShippingAddress({ address, city, postalCode, country}))\r\n        history.push('/payment')\r\n    }\r\n\r\n    return (\r\n        <FormContainer>\r\n            <CheckoutSteps step1 step2 />\r\n            <h1>Shipping</h1>\r\n            <Form onSubmit={submitHandler}>\r\n                <Form.Group controlId='address'>\r\n                    <Form.Label>Address</Form.Label>\r\n                    <Form.Control\r\n                    type='text'\r\n                    placeholder='Enter address'\r\n                    value={address}\r\n                    required\r\n                    onChange={(e) => setAddress(e.target.value)}\r\n                    ></Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='city'>\r\n                    <Form.Label>City</Form.Label>\r\n                    <Form.Control\r\n                    type='text'\r\n                    placeholder='Enter city'\r\n                    value={city}\r\n                    required\r\n                    onChange={(e) => setCity(e.target.value)}\r\n                    ></Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='postalCode'>\r\n                    <Form.Label>Postal Code</Form.Label>\r\n                    <Form.Control\r\n                    type='text'\r\n                    placeholder='Enter postal code'\r\n                    value={postalCode}\r\n                    required\r\n                    onChange={(e) => setPostalCode(e.target.value)}\r\n                    ></Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='country'>\r\n                    <Form.Label>Country</Form.Label>\r\n                    <Form.Control\r\n                    type='text'\r\n                    placeholder='Enter country'\r\n                    value={country}\r\n                    required\r\n                    onChange={(e) => setCountry(e.target.value)}\r\n                    ></Form.Control>\r\n                </Form.Group>\r\n\r\n                <Button type='submit' variant='primary'>\r\n                    Continue\r\n                </Button>\r\n            </Form>\r\n        </FormContainer>\r\n    )\r\n\r\n}\r\n\r\nexport default ShippingScreen","import React, { useState } from \"react\";\r\nimport { Form, Button, Col } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport FormContainer from \"../components/FormContainer\";\r\nimport CheckoutSteps from \"../components/CheckoutSteps\";\r\nimport { savePaymentMethod } from \"../actions/cartActions\";\r\n\r\nconst PaymentScreen = ({ history }) => {\r\n    const cart = useSelector((state) => state.cart)\r\n    const { shippingAddress } = cart\r\n\r\n    if(!shippingAddress.address) {\r\n        history.push('/shipping')\r\n    }\r\n\r\n    const [paymentMethod, setPaymentMethod] = useState('PayPal')\r\n    const dispatch = useDispatch()\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(savePaymentMethod(paymentMethod))\r\n        history.push('/placeorder')\r\n    }\r\n\r\n    return (\r\n        <FormContainer>\r\n            <CheckoutSteps step1 step2 step3/>\r\n            <h1>Payment Method</h1>\r\n            <Form onSubmit={submitHandler}>\r\n                <Form.Group>\r\n                    <Form.Label as='legend'>Select Method</Form.Label>\r\n                    <Col>\r\n                    <Form.Check\r\n                    type='radio'\r\n                    label='PayPal or Credit Card'\r\n                    id='PayPal'\r\n                    name='paymentMethod'\r\n                    value='PayPal'\r\n                    checked\r\n                    onChange={(e) => setPaymentMethod(e.target.value)}\r\n                    ></Form.Check>\r\n                    {/* <Form.Check\r\n                        type='radio'\r\n                        label='Stripe'\r\n                        id='Stripe'\r\n                        name='paymentMethod'\r\n                        value='Stripe'\r\n                        onChange={(e) => setPaymentMethod(e.target.value)}\r\n                        ></Form.Check> */}\r\n                    </Col>\r\n                </Form.Group>\r\n\r\n                <Button type='submit' variant='primary'>\r\n                    Continue\r\n                </Button>\r\n            </Form>\r\n        </FormContainer>\r\n    )\r\n}\r\n\r\nexport default PaymentScreen","import React, { useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Button, Row, Col, ListGroup, Image, Card } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport CheckoutSteps from '../components/CheckoutSteps'\r\nimport { createOrder } from '../actions/orderActions'\r\nimport { ORDER_CREATE_RESET } from '../constants/orderConstants'\r\nimport { USER_DETAILS_RESET } from '../constants/userConstants'\r\n\r\n\r\nconst PlaceOrderScreen = ({ history }) => {\r\n    const dispatch = useDispatch()\r\n\r\n    const cart = useSelector((state) => state.cart)\r\n\r\n    if (!cart.shippingAddress.address) {\r\n        history.push('/shipping')\r\n    } else if (!cart.paymentMethod) {\r\n        history.push('/payment')\r\n    }\r\n\r\n    //calculate prices\r\n    const addDecimals = (num) => {\r\n        return (Math.round(num * 100) / 100).toFixed(2)\r\n    }\r\n\r\n    cart.itemsPrice = addDecimals(\r\n        cart.cartItems.reduce((acc, item) => acc + item.price * item.qty, 0)\r\n    )\r\n\r\n    cart.shippingPrice = addDecimals(cart.itemsPrice > 100 ? 0 : 100)\r\n    cart.taxPrice = addDecimals(Number((0.15 * cart.itemsPrice).toFixed(2)))\r\n    cart.totalPrice = (\r\n        Number(cart.itemsPrice) +\r\n        Number(cart.shippingPrice) +\r\n        Number(cart.taxPrice)\r\n    ).toFixed(2)\r\n\r\n    const orderCreate = useSelector((state) => state.orderCreate)\r\n    const { order, success, error } = orderCreate\r\n\r\n    useEffect(() => {\r\n        if (success) {\r\n            history.push(`/order/${order._id}`)\r\n            dispatch({ type: USER_DETAILS_RESET })\r\n            dispatch({ type: ORDER_CREATE_RESET})\r\n        }\r\n        // eslint-disable-next-line\r\n    }, [history, success])\r\n\r\n    const placeOrderHandler = () => {\r\n        dispatch(createOrder({\r\n            orderItems: cart.cartItems,\r\n            shippingAddress: cart.shippingAddress,\r\n            paymentMethod: cart.paymentMethod,\r\n            itemsPrice: cart.itemsPrice,\r\n            shippingPrice: cart.shippingPrice,\r\n            taxPrice: cart.taxPrice,\r\n            totalPrice: cart.totalPrice\r\n        }))\r\n    }\r\n\r\n    return (\r\n        <>\r\n        <CheckoutSteps step1 step2 step3 step4 />\r\n        <Row>\r\n            <Col md={8}>\r\n            <ListGroup variant='flush'>\r\n                <ListGroup.Item>\r\n                    <h2>Shipping</h2>\r\n                    <p>\r\n                        <strong>Address:</strong>\r\n                        {cart.shippingAddress.address}, {cart.shippingAddress.city}{' '}\r\n                        {cart.shippingAddress.postalCode}, {' '}\r\n                        {cart.shippingAddress.country}\r\n                    </p>\r\n                </ListGroup.Item>\r\n\r\n                <ListGroup.Item>\r\n                    <h2>Payment Method</h2>\r\n                    <p>\r\n                        <strong>Method: </strong>\r\n                        {cart.paymentMethod}\r\n                    </p>\r\n                </ListGroup.Item>\r\n\r\n                <ListGroup.Item>\r\n                    <h2>Order Items</h2>\r\n                    {cart.cartItems.length === 0 ? (\r\n                        <Message>Your cart is empty</Message>\r\n                    ): (\r\n                        <ListGroup variant='flush'>\r\n                            {cart.cartItems.map((item, index) => (\r\n                                <ListGroup.Item key={index}>\r\n                                    <Row>\r\n                                        <Col md={1}>\r\n                                        <Image\r\n                                        src={item.image}\r\n                                        alt={item.name}\r\n                                        fluid\r\n                                        rounded\r\n                                        />\r\n                                        </Col>\r\n                                        <Col>\r\n                                        <Link to={`/product/${item.product}`}>\r\n                                        {item.name}\r\n                                        </Link>\r\n                                        </Col>\r\n                                        <Col md={4}>\r\n                                        {item.qty} x ${item.price} = ${item.qty * item.price}\r\n                                        </Col>\r\n                                    </Row>\r\n                                </ListGroup.Item>\r\n                            ))}\r\n                        </ListGroup>\r\n                    )}\r\n                </ListGroup.Item>\r\n            </ListGroup>\r\n            </Col>\r\n            <Col md={4}>\r\n            <Card>\r\n                <ListGroup variant='flush'>\r\n                    <ListGroup.Item>\r\n                        <h2>Order Summary</h2>\r\n                    </ListGroup.Item>\r\n                    <ListGroup.Item>\r\n                        <Row>\r\n                            <Col>Items</Col>\r\n                            <Col>${cart.itemsPrice}</Col>\r\n                        </Row>\r\n                    </ListGroup.Item>\r\n                    <ListGroup.Item>\r\n                        <Row>\r\n                            <Col>Shipping</Col>\r\n                            <Col>${cart.shippingPrice}</Col>\r\n                        </Row>\r\n                    </ListGroup.Item>\r\n                    <ListGroup.Item>\r\n                        <Row>\r\n                            <Col>Tax</Col>\r\n                            <Col>${cart.taxPrice}</Col>\r\n                        </Row>\r\n                    </ListGroup.Item>\r\n                    <ListGroup.Item>\r\n                        <Row>\r\n                            <Col>Total</Col>\r\n                            <Col>${cart.totalPrice}</Col>\r\n                        </Row>\r\n                    </ListGroup.Item>\r\n                    <ListGroup.Item>\r\n                        {error && <Message variant='danger'>{error}</Message>}\r\n                    </ListGroup.Item>\r\n                    <ListGroup.Item>\r\n                        <Button\r\n                        type='button'\r\n                        className='btn-block'\r\n                        disabled={cart.cartItems === 0}\r\n                        onClick= {placeOrderHandler}\r\n                        >\r\n                            Place Order\r\n                        </Button>\r\n                    </ListGroup.Item>\r\n                </ListGroup>\r\n            </Card>\r\n            </Col>\r\n        </Row>\r\n        </>\r\n    )\r\n\r\n}\r\n\r\nexport default PlaceOrderScreen","import React, { useState, useEffect } from 'react'\r\nimport axios from 'axios'\r\nimport { PayPalButton } from 'react-paypal-button-v2'\r\nimport { Link } from 'react-router-dom'\r\nimport { Row, Col, ListGroup, Image, Card, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport {\r\n  getOrderDetails,\r\n  payOrder,\r\n  deliverOrder,\r\n} from '../actions/orderActions'\r\nimport {\r\n  ORDER_PAY_RESET,\r\n  ORDER_DELIVER_RESET,\r\n} from '../constants/orderConstants'\r\n\r\nconst OrderScreen = ({ match, history}) => {\r\n    const orderId = match.params.id \r\n\r\n    const [sdkReady, setSdkReady] = useState(false)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const orderDetails = useSelector((state) => state.orderDetails)\r\n    const { order, loading, error } = orderDetails\r\n\r\n    const orderPay = useSelector((state) => state.orderPay)\r\n    const { loading: loadingPay, success: successPay } = orderPay\r\n\r\n    const orderDeliver = useSelector((state) => state.orderDeliver)\r\n    const { loading: loadingDeliver, success: successDeliver } = orderDeliver\r\n\r\n    const userLogin = useSelector((state) => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    if(!loading) {\r\n        //calculate prices\r\n        const addDecimals = (num) => {\r\n            return(Math.round(num * 100) / 100).toFixed(2)\r\n        }\r\n\r\n        order.itemsPrice = addDecimals(\r\n            order.orderItems.reduce((acc, item) => acc + item.price * item.qty, 0)\r\n        )\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (!userInfo) {\r\n            history.push('/login')\r\n        }\r\n\r\n        const addPayPalScript = async () => {\r\n            const { data: clientId } = await axios.get('/api/config/paypal')\r\n            const script = document.createElement('script')\r\n            script.type = 'text/javascript'\r\n            script.src = `https://www.paypal.com/sdk/js?client-id=${clientId}`\r\n            script.async = true\r\n            script.onload = () => {\r\n                setSdkReady(true)\r\n            }\r\n            document.body.appendChild(script)\r\n        }\r\n\r\n\r\n        if(!order || successPay || successDeliver || order._id !== orderId) {\r\n            dispatch({ type: ORDER_PAY_RESET})\r\n            dispatch({ type: ORDER_DELIVER_RESET})\r\n            dispatch(getOrderDetails(orderId))\r\n        } else if ( !order.isPaid) {\r\n            if (!window.paypal) {\r\n                addPayPalScript()\r\n            } else {\r\n                setSdkReady(true)\r\n            }\r\n        }\r\n    }, [dispatch, orderId, successPay, successDeliver, order, history, userInfo])\r\n\r\n    const successPaymentHandler = (paymentResult) => {\r\n        console.log(paymentResult)\r\n        dispatch(payOrder(orderId, paymentResult))\r\n    }\r\n\r\n    const deliverHandler = () => {\r\n        dispatch(deliverOrder(order))\r\n    }\r\n\r\n    return loading ? (\r\n        <Loader />\r\n    ) : error ? (\r\n        <Message variant='danger'>{error}</Message>\r\n    ) : (\r\n        <>\r\n        <h1>Order {order._id}</h1>\r\n        <Row>\r\n            <Col md={8}>\r\n                <ListGroup variant='flush'>\r\n                    <ListGroup.Item>\r\n                        <h2>Shipping</h2>\r\n                        <p>\r\n                            <strong>Name: </strong> {order.user.name}\r\n                        </p>\r\n                        <p>\r\n                            <strong>Email: </strong> {' '}\r\n                            <a href={`mailto:${order.user.email}`}>{order.user.name}</a>\r\n                        </p>\r\n                        <p>\r\n                            <strong>Address: </strong>\r\n                            {order.shippingAddress.address}, {order.shippingAddress.city}{' '}\r\n                            {order.shippingAddress.postalCode}, {' '}\r\n                            {order.shippingAddress.country}\r\n                        </p>\r\n                          {order.isPaid ? (\r\n                              <Message variant='success'>Paid on {order.paidAt}</Message>\r\n                          ): (\r\n                              <Message variant='danger'>Not Paid</Message>\r\n                          )}\r\n                    </ListGroup.Item>\r\n\r\n                    <ListGroup.Item>\r\n                        <h2>Order Items</h2>\r\n                        {order.orderItems.length === 0 ? (\r\n                            <Message>Order is empty</Message>\r\n                        ) : (\r\n                            <ListGroup variant='flush'>\r\n                                {order.orderItems.map((item, index) => (\r\n                                    <ListGroup.Item key={index}>\r\n                                        <Row>\r\n                                            <Col md={1}>\r\n                                            <Image\r\n                                            src={item.image}\r\n                                            alt={item.name}\r\n                                            fluid\r\n                                            rounded\r\n                                            />\r\n                                            </Col>\r\n                                            <Col>\r\n                                            <Link to={`/product/${item.product}`}>\r\n                                            {item.name}\r\n                                            </Link>\r\n                                            </Col>\r\n                                            <Col md={4}>\r\n                                            {item.qty} x ${item.price} = ${item.qty * item.price}\r\n                                            </Col>\r\n                                        </Row>\r\n                                    </ListGroup.Item>\r\n                                ))}\r\n                            </ListGroup>\r\n                        )}\r\n                    </ListGroup.Item>\r\n                </ListGroup>\r\n            </Col>\r\n            <Col md={4}>\r\n            <Card>\r\n                <ListGroup variant='flush'>\r\n                    <ListGroup.Item>\r\n                        <h2>Order Summary</h2>\r\n                    </ListGroup.Item>\r\n                    <ListGroup.Item>\r\n                        <Row>\r\n                            <Col>Items</Col>\r\n                            <Col>${order.itemsPrice}</Col>\r\n                        </Row>\r\n                    </ListGroup.Item>\r\n                    <ListGroup.Item>\r\n                    <Row>\r\n                            <Col>Shipping</Col>\r\n                            <Col>${order.shippingPrice}</Col>\r\n                        </Row>\r\n                    </ListGroup.Item>\r\n                    <ListGroup.Item>\r\n                    <Row>\r\n                            <Col>Tax</Col>\r\n                            <Col>${order.taxPrice}</Col>\r\n                        </Row>\r\n                    </ListGroup.Item>\r\n                    <ListGroup.Item>\r\n                    <Row>\r\n                            <Col>Total</Col>\r\n                            <Col>${order.totalPrice}</Col>\r\n                        </Row>\r\n                    </ListGroup.Item>\r\n                    {!order.isPaid && (\r\n                        <ListGroup.Item>\r\n                            {loadingPay && <Loader />}\r\n                            {!sdkReady ? (\r\n                                <Loader />\r\n                            ) : (\r\n                                <PayPalButton \r\n                                amount={order.totalPrice}\r\n                                onSuccess={successPaymentHandler}\r\n                                />\r\n                            )}\r\n                        </ListGroup.Item>\r\n                    )}\r\n                    {loadingDeliver && <Loader />}\r\n                    {userInfo && \r\n                    userInfo.isAdmin && \r\n                    order.isPaid && \r\n                    !order.isDelivered && (\r\n                        <ListGroup.Item>\r\n                            <Button\r\n                            type='button'\r\n                            className='btn btn-block'\r\n                            onClick={deliverHandler}\r\n                            >\r\n                                Mark As Delivered\r\n                            </Button>\r\n                        </ListGroup.Item>\r\n                    )\r\n                    }\r\n                </ListGroup>\r\n            </Card>\r\n            </Col>\r\n        </Row>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default OrderScreen","import React, { useEffect } from \"react\";\r\nimport { LinkContainer } from \"react-router-bootstrap\";\r\nimport { Table, Button } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Message from \"../components/Message\";\r\nimport Loader from \"../components/Loader\";\r\nimport { listUsers, deleteUser } from \"../actions/userActions\";\r\n\r\nconst UserListScreen = ({ history }) => {\r\n    const dispatch = useDispatch()\r\n\r\n    const userList = useSelector((state) => state.userList)\r\n    const { loading, error, users } = userList\r\n\r\n    const userLogin = useSelector((state) => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    const userDelete = useSelector((state) => state.userDelete)\r\n    const { success: successDelete } = userDelete\r\n\r\n    useEffect(() => {\r\n        if(userInfo && userInfo.isAdmin) {\r\n            dispatch(listUsers())\r\n        } else {\r\n            history.push('/login')\r\n        }\r\n    }, [dispatch, history, successDelete, userInfo])\r\n\r\n    const deleteHandler = (id) => {\r\n        if (window.confirm('Are you sure')) {\r\n            dispatch(deleteUser(id))\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n        <h1>Users</h1>\r\n        {loading ? ( <Loader/>) : error ? (<Message variant='danger'>{error}</Message>): (\r\n            <Table striped bordered hover responsive className='table-sm'>\r\n                <thead>\r\n                    <tr>\r\n                        <th>ID</th>\r\n                        <th>NAME</th>\r\n                        <th>EMAIL</th>\r\n                        <th>ADMIN</th>\r\n                        <th></th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {users.map((user) => (\r\n                        <tr key={user._id}>\r\n                            <td>{user._id}</td>\r\n                            <td>{user.name}</td>\r\n                            <td>\r\n                                <a href={`mailto:${user.email}`}>{user.email}</a>\r\n                            </td>\r\n                            <td>\r\n                                {user.isAdmin ? (\r\n                                    <i className='fas fa-check' style={{color: 'green'}}></i>\r\n                                ) : (\r\n                                    <i className='fas fa-times' style={{ color: 'red'}}></i>\r\n                                )}\r\n                            </td>\r\n                            <td>\r\n                                <LinkContainer to={`/admin/user/${user._id}/edit`}>\r\n                                   <Button variant='light' className='btn-sm'>\r\n                                       <i className='fas fa-edit'></i>\r\n                                   </Button>\r\n                                </LinkContainer>\r\n                                <Button\r\n                                variant='danger'\r\n                                className='btn-sm'\r\n                                onClick={() => deleteHandler(user._id)}\r\n                                >\r\n                                    <i className='fas fa-trash'></i>\r\n                                </Button>\r\n                            </td>\r\n                        </tr>\r\n                    ))}\r\n                </tbody>\r\n            </Table>\r\n        )}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default UserListScreen","import React, { useState, useEffect } from \"react\";\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport FormContainer from '../components/FormContainer'\r\nimport { getUserDetails, updateUser } from '../actions/userActions'\r\nimport { USER_UPDATE_RESET } from '../constants/userConstants'\r\n\r\nconst UserEditScreen = ({ match, history}) => {\r\n    const userId = match.params.id \r\n\r\n    const [name, setName] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [isAdmin,  setIsAdmin] = useState(false)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const userDetails = useSelector((state) => state.userDetails)\r\n    const { loading, error, user } = userDetails\r\n\r\n    const userUpdate = useSelector((state) => state.userUpdate)\r\n\r\n    const {\r\n        loading: loadingUpdate,\r\n        error: errorUpdate,\r\n        success: successUpdate\r\n    } = userUpdate\r\n\r\n    useEffect(() => {\r\n        if (successUpdate) {\r\n            dispatch({ type: USER_UPDATE_RESET})\r\n            history.push('/admin/userlist')\r\n        } else {\r\n            if (!user.name || user._id !== userId) {\r\n                dispatch(getUserDetails(userId))\r\n            } else {\r\n                setName(user.name)\r\n                setEmail(user.email)\r\n                setIsAdmin(user.isAdmin)\r\n            }\r\n        }\r\n    }, [dispatch, history, userId, user, successUpdate])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(updateUser({ _id: userId, name, email, isAdmin}))\r\n    }\r\n\r\n    return (\r\n        <>\r\n        <Link to='/admin/userlist' className='btn btn-light my-3'>\r\n           Go Back\r\n        </Link>\r\n        <FormContainer>\r\n            <h1>Edit User</h1>\r\n            {loadingUpdate && <Loader />}\r\n            {errorUpdate && <Message variant='danger'>{errorUpdate}</Message>}\r\n            {loading ? (\r\n                <Loader />\r\n            ): error ? (\r\n                <Message variant='danger'>{error}</Message>\r\n            ) : (\r\n                <Form onSubmit={submitHandler}>\r\n                    <Form.Group controlId='name'>\r\n                        <Form.Label>Name</Form.Label>\r\n                        <Form.Control\r\n                        type='name'\r\n                        placeholder='Enter name'\r\n                        value={name}\r\n                        onChange={(e) => setName(e.target.value)}\r\n                        ></Form.Control>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId='email'>\r\n                        <Form.Label>Email Address</Form.Label>\r\n                        <Form.Control\r\n                        type='email'\r\n                        placeholder='Enter email'\r\n                        value={email}\r\n                        onChange={(e) => setEmail(e.target.value)}\r\n                        ></Form.Control>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId='isadmin'>\r\n                        <Form.Check\r\n                        type='checkbox'\r\n                        label='Is Admin'\r\n                        checked={isAdmin}\r\n                        onChange={(e) => setIsAdmin(e.target.checked)}\r\n                        ></Form.Check>\r\n                    </Form.Group>\r\n\r\n                    <Button type='submit' variant='primary'>\r\n                        Update\r\n                    </Button>\r\n                </Form>\r\n            )}\r\n        </FormContainer>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default UserEditScreen","import React, { useEffect } from \"react\";\r\nimport { LinkContainer } from \"react-router-bootstrap\";\r\nimport { Table, Button, Row, Col } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Message from \"../components/Message\";\r\nimport Loader from \"../components/Loader\";\r\nimport Paginate from \"../components/Paginate\";\r\nimport { \r\n    listProducts,\r\n    deleteProduct,\r\n    createProduct\r\n } from \"../actions/productActions\";\r\n import { PRODUCT_CREATE_RESET } from \"../constants/productConstants\";\r\n\r\n const ProductListScreen = ({history, match}) => {\r\n     const pageNumber = match.params.pageNumber || 1\r\n\r\n     const dispatch = useDispatch()\r\n\r\n     const productList = useSelector((state) => state.productList)\r\n     const { loading, error, products, page, pages } = productList\r\n\r\n     const productDelete = useSelector((state) => state.productDelete)\r\n\r\n     const {\r\n         loading: loadingDelete,\r\n         error: errorDelete,\r\n         success: successDelete\r\n     } = productDelete\r\n\r\n     const productCreate = useSelector((state) => state.productCreate)\r\n\r\n     const {\r\n         loading: loadingCreate,\r\n         error: errorCreate,\r\n         success: successCreate,\r\n         product: createdProduct\r\n     } = productCreate\r\n\r\n     const userLogin = useSelector((state) => state.userLogin)\r\n     const { userInfo } = userLogin\r\n\r\n     useEffect(() => {\r\n         dispatch({ type: PRODUCT_CREATE_RESET})\r\n\r\n         if(!userInfo || !userInfo.isAdmin) {\r\n             history.push('/login')\r\n         }\r\n\r\n         if(successCreate){\r\n             history.push(`/admin/product/${createdProduct._id}/edit`)\r\n         } else {\r\n             dispatch(listProducts('', pageNumber))\r\n         }\r\n     }, [\r\n         dispatch,\r\n         history,\r\n         userInfo,\r\n         successDelete,\r\n         successCreate,\r\n         createdProduct,\r\n         pageNumber\r\n     ])\r\n\r\n     const deleteHandler = (id) => {\r\n         if(window.confirm('Are you sure')) {\r\n             dispatch(deleteProduct(id))\r\n         }\r\n     }\r\n\r\n     const createProductHandler = () => {\r\n         dispatch(createProduct())\r\n     }\r\n\r\n     return (\r\n         <>\r\n         <Row className='align-items-center'>\r\n             <Col>\r\n             <h1>Products</h1>\r\n             </Col>\r\n             <Col className='text-right'>\r\n                 <Button className='my-3' onClick={createProductHandler}>\r\n                     <i className='fas fa-plus'></i> Create Product\r\n\r\n                 </Button>\r\n             </Col>\r\n         </Row>\r\n         {loadingDelete && <Loader/>}\r\n         {errorDelete && <Message variant='danger'>{errorDelete}</Message>}\r\n         {loadingCreate && <Loader />}\r\n         {errorCreate && <Message variant='danger'>{errorCreate}</Message>}\r\n         {loading ? (\r\n             <Loader />\r\n         ): error ? (\r\n             <Message variant='danger'>{error}</Message>\r\n         ) : (\r\n             <>\r\n             <Table striped bordered hover responsive className='table-sm'>\r\n                 <thead>\r\n                     <tr>\r\n                         <th>ID</th>\r\n                         <th>NAME</th>\r\n                         <th>PRICE</th>\r\n                         <th>CATEGORY</th>\r\n                         <th>BRAND</th>\r\n                         <th></th>\r\n                     </tr>\r\n                 </thead>\r\n                 <tbody>\r\n                     {products.map((product) => (\r\n                         <tr key={product._id}>\r\n                             <td>{product._id}</td>\r\n                             <td>{product._name}</td>\r\n                             <td>{product.price}</td>\r\n                             <td>{product.category}</td>\r\n                             <td>{product.brand}</td>\r\n                             <td>\r\n                                 <LinkContainer to={`/admin/product/${product._id}/edit`}>\r\n                                 <Button variant='light' className='btn-sm'>\r\n                                     <i className='fas fa-edit'></i>\r\n                                 </Button>\r\n                                 </LinkContainer>\r\n                                 <Button\r\n                                 variant='danger'\r\n                                 className='btn-sm'\r\n                                 onClick={() => deleteHandler(product._id)}\r\n                                 >\r\n                                     <i className='fas fa-trash'></i>\r\n                                 </Button>\r\n                             </td>\r\n                         </tr>\r\n                    ))}\r\n                 </tbody>\r\n             </Table>\r\n             <Paginate pages={pages} page={page} isAdmin={true}/>\r\n             </>\r\n         )}\r\n         </>\r\n     )\r\n }\r\n\r\n export default ProductListScreen","import axios from 'axios'\r\nimport { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Form, Button } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader';\r\nimport FormContainer from '../components/FormContainer'\r\nimport { listProductDetails, updateProduct } from '../actions/productActions'\r\nimport { PRODUCT_UPDATE_RESET } from \"../constants/productConstants\";\r\n\r\nconst ProductEditScreen = ({ match, history}) => {\r\n    const productId = match.params.id \r\n\r\n    const [name, setName] = useState('')\r\n    const [price, setPrice] = useState(0)\r\n    const [image, setImage] = useState(null)\r\n    const [brand, setBrand] = useState('')\r\n    const [category, setCategory] = useState('')\r\n    const [countInStock, setCountInStock] = useState(0)\r\n    const [description, setDescription] = useState('')\r\n    const [uploading, setUploading] = useState(false)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const productDetails = useSelector((state) => state.productDetails)\r\n    const { loading, error, product } = productDetails\r\n\r\n    const productUpdate = useSelector((state) => state.productUpdate)\r\n\r\n    const {\r\n        loading: loadingUpdate,\r\n        error: errorUpdate,\r\n        success: successUpdate\r\n    } = productUpdate\r\n\r\n    useEffect(() => {\r\n        if(successUpdate) {\r\n            dispatch({ type: PRODUCT_UPDATE_RESET})\r\n            history.push('/admin/productlist')\r\n        } else {\r\n            if (!product.name || product._id !== productId ) {\r\n                dispatch(listProductDetails(productId))\r\n            } else {\r\n                setName(product.name)\r\n                setPrice(product.price)\r\n                setImage(product.image)\r\n                setBrand(product.brand)\r\n                setCategory(product.category)\r\n                setCountInStock(product.countInStock)\r\n                setDescription(product.description)\r\n            }\r\n        }\r\n    }, [dispatch, history, productId, product, successUpdate])\r\n\r\n    const uploadFileHandler = async (e) => {\r\n        const file = e.target.files[0]\r\n        const formData = new FormData()\r\n        formData.append('image', file)\r\n        setUploading(true)\r\n\r\n        try {\r\n            const config = {\r\n                headers: {\r\n                    'Content-Type': 'multipart/form-data',\r\n                },\r\n            }\r\n\r\n            const { data } = await axios.post('/api/upload', formData, config)\r\n\r\n            setImage(data)\r\n            setUploading(false)\r\n        } catch (error) {\r\n            console.error(error)\r\n            setUploading(false)\r\n        }\r\n    }\r\n    \r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(\r\n            updateProduct({\r\n                _id: productId,\r\n                name,\r\n                price,\r\n                image,\r\n                brand,\r\n                category,\r\n                description,\r\n                countInStock\r\n            })\r\n        )\r\n    }\r\n\r\n    return (\r\n        <>\r\n        <Link to='/admin/productlist' className='btn btn-light my-3'>\r\n        Go Back\r\n        </Link>\r\n        <FormContainer>\r\n            <h1>Edit Product</h1>\r\n            {loadingUpdate && <Loader/>}\r\n            {errorUpdate && <Message variant='danger'>{errorUpdate}</Message>}\r\n            {loading ? (\r\n                <Loader />\r\n            ) : error ? (\r\n            <Message variant='danger'>{error}</Message>\r\n            ) : (\r\n                <Form onSubmit={submitHandler}>\r\n                    <Form.Group controlId='name'>\r\n                       <Form.Label>Name</Form.Label>\r\n                       <Form.Control\r\n                       type='name'\r\n                       placeholder='Enter name'\r\n                       value={name}\r\n                       onChange={(e) => setName(e.target.value)}\r\n                       ></Form.Control>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId='price'>\r\n                       <Form.Label>Price</Form.Label>\r\n                       <Form.Control\r\n                       type='number'\r\n                       placeholder='Enter price'\r\n                       value={price}\r\n                       onChange={(e) => setPrice(e.target.value)}\r\n                       ></Form.Control>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId='image'>\r\n                       <Form.Label>Image</Form.Label>\r\n                       <Form.Control \r\n                       label='Choose File'\r\n                       custom\r\n                       onChange={uploadFileHandler}\r\n                       type=\"file\" />\r\n                       {uploading && <Loader/>}\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId='brand'>\r\n                       <Form.Label>Brand</Form.Label>\r\n                       <Form.Control\r\n                       type='text'\r\n                       placeholder='Enter brand'\r\n                       value={brand}\r\n                       onChange={(e) => setBrand(e.target.value)}\r\n                       ></Form.Control>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId='countInStock'>\r\n                       <Form.Label>Count In Stock</Form.Label>\r\n                       <Form.Control\r\n                       type='number'\r\n                       placeholder='Enter countInStock'\r\n                       value={countInStock}\r\n                       onChange={(e) => setCountInStock(e.target.value)}\r\n                       ></Form.Control>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId='category'>\r\n                       <Form.Label>Category</Form.Label>\r\n                       <Form.Control\r\n                       type='text'\r\n                       placeholder='Enter category'\r\n                       value={category}\r\n                       onChange={(e) => setCategory(e.target.value)}\r\n                       ></Form.Control>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId='description'>\r\n                       <Form.Label>Description</Form.Label>\r\n                       <Form.Control\r\n                       type='text'\r\n                       placeholder='Enter description'\r\n                       value={description}\r\n                       onChange={(e) => setDescription(e.target.value)}\r\n                       ></Form.Control>\r\n                    </Form.Group>\r\n\r\n                    <Button type='submit' variant='primary'>\r\n                        Update\r\n                    </Button>\r\n                </Form>\r\n            )}\r\n        </FormContainer>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ProductEditScreen","import React, { useEffect } from 'react'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { Table, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport { listOrders } from '../actions/orderActions'\r\n\r\n\r\nconst OrderListScreen = ({ history }) => {\r\n    const dispatch = useDispatch()\r\n\r\n    const orderList = useSelector((state) => state.orderList)\r\n    const {loading, error, orders } = orderList\r\n\r\n    const userLogin = useSelector((state) => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    useEffect(() => {\r\n        if(userInfo && userInfo.isAdmin) {\r\n            dispatch(listOrders())\r\n        } else {\r\n            history.push('/login')\r\n        }\r\n    }, [dispatch, history, userInfo])\r\n\r\n    return (\r\n        <>\r\n        <h1>Orders</h1>\r\n        {loading ? (\r\n            <Loader />\r\n        ) : error ? (\r\n            <Message variant='danger'>{error}</Message>\r\n        ) : (\r\n            <Table striped bordered hover responsive className='table-sm'>\r\n                <thead>\r\n                    <tr>\r\n                    <th>ID</th>\r\n                    <th>USER</th>\r\n                    <th>DATE</th>\r\n                    <th>TOTAL</th>\r\n                    <th>PAID</th>\r\n                    <th>DELIVERED</th>\r\n                    <th></th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {orders.map((order) => (\r\n                        <tr key={order._id}>\r\n                            <td>{order._id}</td>\r\n                            <td>{order.user && order.user.name}</td>\r\n                            <td>{order.createdAt.substring(0, 10)}</td>\r\n                            <td>${order.totalPrice}</td>\r\n                            <td>\r\n                                {order.isPaid ? (\r\n                                    order.paidAt.substring(0, 10)\r\n                                ) : (\r\n                                    <i className='fas fa-times' style={{ color: 'red'}}></i>\r\n                                )}\r\n                            </td>\r\n                            <td>\r\n                                {order.isDelivered ? (\r\n                                    order.deliveredAt.substring(0, 10)\r\n                                ) : (\r\n                                    <i className='fas fa-times' styles={{ color: 'red'}}></i>\r\n                                )}\r\n                            </td>\r\n                            <td>\r\n                                <LinkContainer to={`/order/${order._id}`}>\r\n                                <Button variant='light' className='btn-sm'>\r\n                                    Details\r\n                                </Button>\r\n                                </LinkContainer>\r\n                            </td>\r\n                        </tr>\r\n                    ))}\r\n                </tbody>\r\n            </Table>\r\n        )}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default OrderListScreen","import './App.css';\nimport { BrowserRouter as Router, Route } from 'react-router-dom'\nimport { Container } from 'react-bootstrap'\nimport Header from './components/Header'\nimport Footer from './components/Footer'\nimport HomeScreen from './screens/HomeScreen';\nimport ProductScreen from './screens/ProductScreen';\nimport CartScreen from './screens/CartScreen'\nimport LoginScreen from './screens/LoginScreen'\nimport RegisterScreen from './screens/RegisterScreen'\nimport ProfileScreen from './screens/ProfileScreen'\nimport ShippingScreen from './screens/ShippingScreen'\nimport PaymentScreen from './screens/PaymentScreen'\nimport PlaceOrderScreen from './screens/PlaceOrderScreen'\nimport OrderScreen from './screens/OrderScreen'\nimport UserListScreen from './screens/UserListScreen'\nimport UserEditScreen from './screens/UserEditScreen'\nimport ProductListScreen from './screens/ProductListScreen'\nimport ProductEditScreen from './screens/ProductEditScreen'\nimport OrderListScreen from './screens/OrderListScreen'\n\nconst App = () => {\n  return (\n    <Router>\n     <Header />\n     <main className='py-3'>\n       <Container>\n         <Route path='/order/:id' component={OrderScreen}  />\n         <Route path='/shipping' component={ShippingScreen}  />\n         <Route path='/payment' component={PaymentScreen}  />\n         <Route path='/placeorder' component={PlaceOrderScreen}  />\n         <Route path='/login' component={LoginScreen}  />\n         <Route path='/register' component={RegisterScreen}  />\n         <Route path='/profile' component={ProfileScreen}  />\n         <Route path='/product/:id' component={ProductScreen}  />\n         <Route path='/cart/:id?' component={CartScreen}  />\n         <Route path='/admin/userlist' component={UserListScreen}  />\n         <Route path='/admin/user/:id/edit' component={UserEditScreen}  />\n         <Route path='/admin/productlist' component={ProductListScreen} exact />\n         <Route path='/admin/productlist/:pageNumber' component={ProductListScreen} exact />\n         <Route path='/admin/product/:id/edit' component={ProductEditScreen} />\n         <Route path='/admin/orderlist' component={OrderListScreen} />\n         <Route path='/search/:keyword' component={HomeScreen} exact />\n         <Route path='/page/:pageNumber' component={HomeScreen} exact />\n         <Route path='/search/:keyword/page/:pageNumber' component={HomeScreen} exact />\n         <Route path='/' component={HomeScreen} exact />\n       </Container>\n     </main>\n     <Footer />\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport './index.css'\nimport './bootstrap.min.css'\nimport 'react-bootstrap'\nimport store from './store'\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}